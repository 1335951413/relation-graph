(function(){ try {var elementStyle = document.createElement('style'); elementStyle.appendChild(document.createTextNode(".rg-icon{width:19px;height:19px;vertical-align:0px;fill:currentColor;overflow:hidden}.el-icon-remove,.el-icon-circle-plus{cursor:pointer}.rel-node-peel{clear:both;padding:8px;position:absolute;font-size:14px}.rel-node{text-align:center}.rel-node-shape-1{border-radius:5px}.c-node-text{height:100%;width:100%;display:flex;align-items:center;justify-content:center}.rel-node-shape-1 .c-node-text{padding-left:5px;padding-right:5px}.rel-node-shape-0{width:80px;height:80px;border-radius:50%}.rel-node-type-button{border-radius:25px;color:#00f;cursor:pointer}.rel-node-checked,.rel-node-selected{box-shadow:0 0 10px #fd8b37;animation-timing-function:linear;animation:ACTRGNodeInit 2s}.rel-node-vtree-2{transform-origin:0 0;transform:rotate(30deg) translate(0)}.rel-node-vtree{width:130px;height:45px;text-align:left}.c-btn-open-close{position:absolute;height:100%;width:19px;display:flex;align-items:center;justify-content:center;user-select:none;pointer-events:none}.c-btn-open-close span{width:19px;height:19px;display:inline-block;text-align:center;border-radius:15px;color:#fff;cursor:pointer;font-size:19px;line-height:16px;background-size:100% 100%;pointer-events:all}.c-expanded{background-image:url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310217820%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223373%22%20width=%2232%22%20height=%2232%22%3E%3Cpath%20d=%22M853.333333%20480H544V170.666667c0-17.066667-14.933333-32-32-32s-32%2014.933333-32%2032v309.333333H170.666667c-17.066667%200-32%2014.933333-32%2032s14.933333%2032%2032%2032h309.333333V853.333333c0%2017.066667%2014.933333%2032%2032%2032s32-14.933333%2032-32V544H853.333333c17.066667%200%2032-14.933333%2032-32s-14.933333-32-32-32z%22%20p-id=%223374%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E)}.c-collapsed{background-image:url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310454619%22%20class=%22icon%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223662%22%20width=%22128%22%20height=%22128%22%3E%3Cpath%20d=%22M853.333333%20554.666667H170.666667c-23.466667%200-42.666667-19.2-42.666667-42.666667s19.2-42.666667%2042.666667-42.666667h682.666666c23.466667%200%2042.666667%2019.2%2042.666667%2042.666667s-19.2%2042.666667-42.666667%2042.666667z%22%20p-id=%223663%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E)}.c-expand-positon-left{margin-top:-8px;margin-left:-25px}.c-expand-positon-right{height:100%;width:100%;justify-content:center}.c-expand-positon-right span{margin-top:-18px;margin-right:-18px;margin-left:100%}.c-expand-positon-bottom{height:100%;width:100%;margin-top:7px;margin-left:-8px;align-items:flex-end;justify-content:center}.c-expand-positon-top{height:18px;width:100%;margin-top:-20px;margin-left:-6px;align-items:flex-end;justify-content:center}@keyframes ACTRGNodeInit{0%{box-shadow:0 0 15px #fd8b37}15%{box-shadow:0 0 1px #2e4e8f}30%{box-shadow:0 0 15px #fd8b37}45%{box-shadow:0 0 1px #2e4e8f}60%{box-shadow:0 0 15px #fd8b37}to{box-shadow:0 0 1px #2e4e8f}}.rel-diy-node{padding:0}.c-rg-line-checked{stroke-width:2px;stroke-dasharray:5,5,5;stroke-dashoffset:3px;stroke-linecap:butt;stroke-linejoin:bevel;-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:ACTRGLineChecked 10s}.c-rg-line-text{fill:#888;font-size:12px}.c-rg-line{z-index:1000;fill-rule:nonzero}.c-rg-line-tool{stroke-dasharray:5,5,5}.c-rg-line-flash{-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:ACTRGLineChecked 10s}@keyframes ACTRGLineInit{0%{stroke-dashoffset:10px;stroke-dasharray:20,20,20}to{stroke-dashoffset:0;stroke-dasharray:0,0,0}}@keyframes ACTRGLineChecked{0%{stroke-dashoffset:352px}to{stroke-dashoffset:0}}.rel-map[data-v-4782cad0]{background-color:#fff;overflow:hidden;cursor:default;user-select:none}.rel-map-background-norepeat[data-v-4782cad0]{background-repeat:no-repeat;background-position:right bottom}.rel-nodediv-for-webkit[data-v-4782cad0]{position:absolute;width:100%;top:0px;left:0px;z-index:1000}.rel-map-canvas[data-v-4782cad0]{position:relative;top:0px;left:0px;border:0px;z-index:3}svg[data-v-4782cad0]{height:100%;width:100%}.rel-linediv[data-v-4782cad0]{position:absolute;z-index:900;width:100%;top:0px;left:0px;--stroke:url(#lineStyle);--markerEnd:url(#arrow-default);--markerStart:url(#start-arrow-default);--markerEndChecked:url(#arrow-checked);--markerStartChecked:url(#start-arrow-checked)}.rel-linediv svg[data-v-4782cad0]{overflow:visible}.rel-map[data-v-4782cad0] img{-webkit-user-drag:none;-webkit-user-select:none}.c-setting-panel[data-v-684b5fc8]{--height:300px;--width:200px;width:300px;height:200px;position:absolute;margin-left:10px;margin-top:5px;font-size:12px;color:#3a5bb2;padding:60px 10px 10px;overflow:hidden;box-shadow:0 0 5px #999;border-radius:5px;z-index:1000;background-color:#fff;border:#999999 solid 1px}.c-setting-panel-button[data-v-684b5fc8]{height:35px;width:35px;font-size:8px;line-height:35px;text-align:center;border-radius:50%;position:absolute;margin-left:25px;margin-top:20px;background-color:#3a5bb2;color:#fff;cursor:pointer;z-index:1001;box-shadow:0 0 8px #999}.c-setting-panel-button[data-v-684b5fc8]:hover{box-shadow:0 0 20px #ffa20a;border:#ffffff solid 1px;color:#ffa20a;-moz-transform:rotate(-89deg) translateX(-190px);animation-timing-function:linear;animation:flashButton-data-v-684b5fc8 2s infinite}.c-fixedLayout[data-v-684b5fc8]{position:fixed;top:125px}@keyframes flashButton-data-v-684b5fc8{0%{box-shadow:0 0 8px #2e4e8f}30%{box-shadow:0 0 20px #ffa20a}to{box-shadow:0 0 8px #2e4e8f}}.c-debug-tools-row[data-v-684b5fc8]{text-align:left}.c-mini-graph[data-v-80f8cbb6]{height:100px;width:100px;position:absolute;margin-left:60px;margin-top:100px;z-index:999}.c-fixedLayout[data-v-80f8cbb6]{position:fixed;top:100px}.c-mini-canvas[data-v-80f8cbb6]{background-color:#aacbff;border:#7BA8FF solid 1px;opacity:.8;position:relative}.c-mini-view[data-v-80f8cbb6]{background-color:#f5a565;border:#C03639 solid 1px;opacity:.5;color:#fff;font-size:14px;text-align:center;display:flex;align-items:center;justify-content:center;position:absolute}.c-mini-node[data-v-80f8cbb6]{position:absolute;width:2px;height:2px;background-color:#000;border-radius:1px}.rg-icon[data-v-77714382]{width:16px;height:16px;vertical-align:-3px;fill:currentColor;overflow:hidden}.c-mini-toolbar[data-v-77714382]{width:44px;position:absolute;margin-top:170px;margin-right:10px;z-index:999;border:#bbbbbb solid 1px;background-color:#fff;box-shadow:0 0 8px #ccc;box-sizing:border-box}.c-fixedLayout[data-v-77714382]{position:fixed;top:100px}.c-mb-button[data-v-77714382]{height:44px;width:42px;margin-top:0;background-color:#fff;border-top:#efefef solid 1px;opacity:1;text-align:center;padding-top:3px;cursor:pointer;color:#999;font-size:18px;float:left;box-sizing:border-box;line-height:21px}.c-mb-button .c-mb-text[data-v-77714382]{display:inline-block;height:14px;width:42px;font-size:12px;line-height:12px;margin-top:24px;margin-left:-28px;position:absolute;color:#262626}.c-mb-button-on[data-v-77714382]{background-color:#2e74b5;border-top:#2E4E8F solid 1px;color:#fff}.c-mb-button[data-v-77714382]:hover{background-color:#2e4e8f;border-top:#2E4E8F solid 1px;color:#fff}.c-mb-button:hover .c-mb-text[data-v-77714382],.c-mb-button-on .c-mb-text[data-v-77714382]{color:#fff}.c-mb-button .c-mb-child-panel[data-v-77714382]{height:46px;position:absolute;margin-top:-26px;background-color:#fff;display:none;border:#bbbbbb solid 1px;box-shadow:0 0 8px #ccc;box-sizing:border-box}.c-mb-button:hover .c-mb-child-panel[data-v-77714382]{display:block}.c-mb-button .c-mb-button[data-v-77714382]{height:44px;width:42px;margin:0;border:none}.c-mb-button-c .c-mb-text[data-v-77714382]{color:#262626!important}.c-mb-button-c:hover .c-mb-text[data-v-77714382],.c-mb-button-on .c-mb-text[data-v-77714382]{color:#fff!important}.c-loading-icon[data-v-77714382]{animation:turn-data-v-77714382 1s linear infinite}@keyframes turn-data-v-77714382{0%{-webkit-transform:rotate(0deg)}25%{-webkit-transform:rotate(90deg)}50%{-webkit-transform:rotate(180deg)}75%{-webkit-transform:rotate(270deg)}to{-webkit-transform:rotate(360deg)}}")); document.head.appendChild(elementStyle);} catch(e) {console.error('vite-plugin-css-injected-by-js', e);} })();var Ct = Object.defineProperty;
var kt = (t, o, e) => o in t ? Ct(t, o, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[o] = e;
var p = (t, o, e) => (kt(t, typeof o != "symbol" ? o + "" : o, e), e);
import * as B from "vue";
import T from "screenfull";
import dt from "html2canvas";
const ft = "2.0.12";
(function(t) {
  var o, e, n, i, s, l, c = '<svg><symbol id="icon-iconset0444" viewBox="0 0 1024 1024"><path d="M960 682.666667l-106.666667 0C844.8 569.6 763.733333 42.666667 64 42.666667 51.2 42.666667 42.666667 51.2 42.666667 64c0 12.8 8.533333 21.333333 21.333333 21.333333 219.733333 0 377.6 106.666667 465.066667 315.733333 51.2 123.733333 64 236.8 66.133333 281.6L490.666667 682.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 6.4 2.133333 10.666667 6.4 14.933333l234.666667 256c4.266667 4.266667 8.533333 6.4 14.933333 6.4 6.4 0 10.666667-2.133333 14.933333-6.4l234.666667-256c4.266667-4.266667 6.4-8.533333 6.4-14.933333C981.333333 691.2 972.8 682.666667 960 682.666667zM725.333333 928 539.733333 725.333333 618.666667 725.333333c12.8 0 21.333333-8.533333 21.333333-21.333333l0-21.333333c-4.266667-87.466667-38.4-396.8-273.066667-554.666667C755.2 251.733333 804.266667 588.8 810.666667 682.666667l0 21.333333c0 12.8 8.533333 21.333333 21.333333 21.333333l78.933333 0L725.333333 928z"  ></path></symbol><symbol id="icon-iconset0445" viewBox="0 0 1024 1024"><path d="M974.933333 305.066667l-234.666667-256C736 44.8 731.733333 42.666667 725.333333 42.666667c-6.4 0-10.666667 2.133333-14.933333 6.4l-234.666667 256C471.466667 309.333333 469.333333 313.6 469.333333 320c0 12.8 8.533333 21.333333 21.333333 21.333333l104.533333 0c-2.133333 44.8-14.933333 157.866667-66.133333 281.6C441.6 832 283.733333 938.666667 64 938.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 12.8 8.533333 21.333333 21.333333 21.333333 699.733333 0 780.8-526.933333 789.333333-640l106.666667 0c12.8 0 21.333333-8.533333 21.333333-21.333333C981.333333 313.6 979.2 309.333333 974.933333 305.066667zM832 298.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333l0 21.333333c-6.4 93.866667-55.466667 430.933333-443.733333 554.666667 234.666667-157.866667 268.8-467.2 273.066667-554.666667l0-21.333333c0-12.8-8.533333-21.333333-21.333333-21.333333l-78.933333 0L725.333333 96l185.6 202.666667L832 298.666667z"  ></path></symbol><symbol id="icon-yuanquanfenxiang" viewBox="0 0 1024 1024"><path d="M751.148705 578.773799c-61.987796 0-117.066229 30.121018-151.388942 76.488045L398.287145 536.382317c1.991354-10.171664 3.046383-20.673855 3.046383-31.419594 0-18.776645-3.196809-36.817534-9.058306-53.621245l193.486736-107.492176c31.949666 58.566884 94.104261 98.391914 165.386748 98.391914 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 65.73105 751.148705 65.73105c-103.804181 0-188.255595 84.450391-188.255595 188.254571 0 14.246469 1.600451 28.125571 4.613064 41.4746L368.032074 406.279167c-29.841655-39.193651-76.976162-64.544015-129.927141-64.544015-90.004897 0-163.228595 73.223698-163.228595 163.228595 0 90.003873 73.223698 163.228595 163.228595 163.228595 60.882626 0 114.078175-33.510208 142.134161-83.049484L575.173808 700.16452c-7.925507 20.788465-12.280698 43.325761-12.280698 66.86385 0 103.803157 84.450391 188.254571 188.255595 188.254571 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 578.773799 751.148705 578.773799zM751.148705 116.89636c75.590606 0 137.089261 61.498656 137.089261 137.089261s-61.498656 137.089261-137.089261 137.089261c-75.591629 0-137.090285-61.498656-137.090285-137.089261S675.557076 116.89636 751.148705 116.89636zM238.105956 617.026008c-61.791321 0-112.063285-50.27094-112.063285-112.063285 0-61.791321 50.27094-112.063285 112.063285-112.063285s112.063285 50.27094 112.063285 112.063285C350.168218 566.755068 299.897278 617.026008 238.105956 617.026008zM751.148705 904.117632c-75.591629 0-137.090285-61.498656-137.090285-137.089261s61.498656-137.089261 137.090285-137.089261c75.590606 0 137.089261 61.498656 137.089261 137.089261S826.739311 904.117632 751.148705 904.117632z"  ></path></symbol><symbol id="icon-hj2" viewBox="0 0 1024 1024"><path d="M963.66 256.607c0-0.244 0-0.607-0.126-0.851 0-0.369 0-0.614-0.119-0.978 0-0.369-0.119-0.733-0.119-1.104 0-0.244 0-0.487-0.126-0.725 0-0.369-0.119-0.859-0.244-1.222 0-0.244-0.119-0.369-0.119-0.613-0.126-0.365-0.126-0.852-0.245-1.216 0-0.244-0.126-0.369-0.126-0.613-0.119-0.365-0.244-0.734-0.364-1.222-0.126-0.244-0.126-0.49-0.244-0.609l-0.369-1.095c-0.119-0.245-0.119-0.49-0.244-0.734-0.121-0.369-0.245-0.613-0.365-0.978-0.126-0.244-0.244-0.613-0.369-0.851-0.119-0.244-0.238-0.613-0.364-0.859-0.119-0.364-0.244-0.607-0.364-0.977l-0.371-0.734c-0.119-0.364-0.364-0.725-0.487-0.971-0.119-0.245-0.244-0.371-0.364-0.614-0.244-0.364-0.369-0.733-0.614-1.097-0.119-0.126-0.244-0.369-0.364-0.487l-0.733-1.097c-0.119-0.126-0.244-0.369-0.365-0.487-0.244-0.369-0.487-0.733-0.733-0.978-0.126-0.244-0.244-0.369-0.487-0.613-0.245-0.238-0.49-0.607-0.734-0.851-0.244-0.245-0.487-0.49-0.607-0.734-0.244-0.244-0.369-0.487-0.614-0.733-0.851-0.972-1.829-1.83-2.681-2.682-0.245-0.244-0.49-0.369-0.734-0.614-0.244-0.244-0.487-0.487-0.733-0.607-0.245-0.244-0.614-0.487-0.859-0.733-0.238-0.121-0.364-0.365-0.607-0.49-0.365-0.244-0.734-0.487-0.978-0.733-0.119-0.119-0.364-0.244-0.487-0.365l-1.097-0.733c-0.119-0.119-0.364-0.244-0.487-0.364-0.365-0.244-0.734-0.369-1.097-0.614-0.244-0.119-0.369-0.244-0.613-0.364-0.365-0.126-0.734-0.369-0.972-0.487l-0.734-0.369c-0.369-0.121-0.613-0.245-0.977-0.365-0.244-0.126-0.614-0.244-0.859-0.369-0.244-0.119-0.607-0.238-0.851-0.364-0.365-0.119-0.609-0.244-0.978-0.364-0.244-0.126-0.487-0.126-0.733-0.245l-1.097-0.369c-0.244-0.119-0.487-0.119-0.609-0.244-0.369-0.119-0.733-0.244-1.22-0.364-0.245 0-0.371-0.126-0.614-0.126-0.364-0.119-0.851-0.244-1.216-0.244-0.244 0-0.487-0.121-0.613-0.121-0.364-0.126-0.852-0.126-1.222-0.244-0.244 0-0.482-0.126-0.725-0.126-0.369 0-0.734-0.119-1.104-0.119-0.364 0-0.607 0-0.978-0.126-0.244 0-0.607 0-0.851-0.119h-242.407c-21.604 0-39.062 17.456-39.062 39.062 0 21.604 17.458 39.055 39.062 39.055h146.102l-3.171 3.177-217.27 217.265 0.369 0.369-49.676 49.676-155.87-155.87c-7.694-7.689-17.827-11.472-27.953-11.472-10.13-0.126-20.263 3.659-27.952 11.472l-282.446 282.322c-15.258 15.258-15.258 40.041 0 55.298 15.258 15.258 40.033 15.258 55.291 0l255.108-255.11 155.746 155.751c7.813 7.815 17.945 11.593 28.076 11.474 10.126 0.119 20.382-3.659 28.070-11.474l182.964-182.969c0.734-0.734 1.347-1.342 1.956-2.075l111.564-111.564v146.109c0 21.604 17.451 39.060 39.055 39.060s39.062-17.456 39.062-39.060v-235.085c0-0.244 0.126-0.49 0.126-0.614 0-0.244 0.119-0.487 0.119-0.733 0-0.364 0.119-0.734 0.119-1.097s0-0.607 0.126-0.977c0-0.245 0-0.609 0.119-0.852-0.122-1.466-0.122-2.807-0.122-4.030v0zM963.66 256.607z"  ></path></symbol><symbol id="icon-circleyuanquan" viewBox="0 0 1024 1024"><path d="M150.1184 150.1184C250.2656 50.0736 370.8928 0 512 0c141.1072 0 261.7344 50.0736 361.8816 150.1184C973.9264 250.2656 1024 370.8928 1024 512c0 141.2096-50.0736 261.8368-150.1184 361.8816C773.7344 973.9264 653.1072 1024 512 1024c-141.1072 0-261.7344-50.0736-361.8816-150.1184C50.0736 773.8368 0 653.2096 0 512 0 370.8928 50.0736 250.2656 150.1184 150.1184zM512 41.8816c-85.2992 0-164.1472 20.8896-236.3392 62.7712C203.4688 146.432 146.432 203.4688 104.6528 275.6608 62.7712 347.9552 41.8816 426.7008 41.8816 512c0 129.6384 45.9776 240.4352 137.8304 332.288C271.5648 936.2432 382.3616 982.1184 512 982.1184c129.6384 0 240.4352-45.8752 332.288-137.8304C936.2432 752.4352 982.1184 641.6384 982.1184 512c0-129.6384-45.9776-240.3328-137.8304-332.288C752.4352 87.7568 641.6384 41.8816 512 41.8816zM512 256c-36.1472 0-70.144 7.0656-102.1952 20.8896C377.856 290.9184 349.4912 309.3504 324.9152 332.288c-22.9376 24.576-41.472 52.9408-55.3984 84.8896S248.6272 483.328 248.6272 519.3728c0 36.1472 6.9632 70.144 20.8896 102.1952s32.4608 60.3136 55.3984 84.8896C349.4912 729.4976 377.856 747.9296 409.8048 761.856 441.856 775.7824 475.8528 782.7456 512 782.7456c36.1472 0 70.144-6.9632 102.1952-20.8896C646.144 747.9296 674.5088 729.4976 699.0848 706.4576c22.9376-24.576 41.472-52.9408 55.3984-84.8896s20.8896-66.048 20.8896-102.1952c0-36.0448-6.9632-70.144-20.8896-102.1952S722.0224 356.9664 699.0848 332.288C674.5088 309.3504 646.144 290.9184 614.1952 276.8896 582.144 263.0656 548.1472 256 512 256z"  ></path></symbol><symbol id="icon-bhjlink" viewBox="0 0 1024 1024"><path d="M901.920618 465.785468c-50.993571 0-94.522533 32.698367-110.688942 78.273953L702.244627 544.059421c1.764013-10.590222 2.890616-21.423121 2.890616-32.694527 0-72.177856-40.480145-134.923579-99.898281-166.857822l34.099901-112.776268c8.829281 2.126492 18.1347 3.327588 27.724265 3.327588 64.833817 0 117.472367-52.597848 117.472367-117.589097C784.532727 52.594008 731.894177 0 667.06036 0c-64.911381 0-117.509229 52.594008-117.509229 117.470063 0 49.305587 30.248562 91.349307 73.177745 108.842756l-33.419485 110.692013c-22.548956-9.588797-47.462473-14.807112-73.540224-14.807112-49.18732 0-93.841349 18.658451-127.540374 49.309426L213.348053 196.583401l-1.886119 2.008226c19.940183-21.103648 32.256788-49.588197 32.256788-81.003297 0-64.872983-52.517212-117.470063-117.470063-117.470063-64.913685 0-117.511533 52.59708-117.511533 117.470063 0 65.034255 52.59708 117.592169 117.511533 117.592169 31.412796 0 59.898881-12.358075 80.921125-32.335888l-6.179038 6.056931 174.960609 174.879973c-30.729308 33.66293-49.506025 78.47516-49.506025 127.661712 0 43.008283 14.401627 82.685138 38.593258 114.501114l-149.845117 120.999625c-21.503757-28.044506-55.285722-46.218372-93.357532-46.218372-64.874519 0-117.430897 52.719186-117.430897 117.592169 0 64.833049 52.556378 117.470063 117.430897 117.470063 64.872983 0 117.549163-52.637014 117.549163-117.470063 0-20.541499-5.335813-39.878062-14.602834-56.68956l151.369526-122.203792c34.584487 37.633303 84.29095 61.384123 139.618142 61.384123 28.082136 0 54.602234-6.057699 78.553492-17.091805l52.716114 119.514383c-35.585143 20.222026-59.497236 58.335306-59.497236 102.106945 0 64.912149 52.637014 117.549163 117.592169 117.549163 64.872983 0 117.388659-52.637014 117.388659-117.549163 0-64.833049-52.516444-117.513069-117.388659-117.513069-15.047485 0-29.248673 2.929782-42.446133 7.903885l-52.798286-120.034294c42.807844-24.554878 75.182898-65.518073 88.46253-114.221576l88.222926 0c-1.405374 7.018422-1.96522 14.241123-1.96522 21.743362 0 64.872983 52.557914 117.509997 117.387123 117.509997 64.995089 0 117.596009-52.637014 117.596009-117.509997C1019.508947 518.383316 966.994039 465.785468 901.920618 465.785468L901.920618 465.785468zM901.920618 465.785468"  ></path></symbol><symbol id="icon-lianjie_connecting5" viewBox="0 0 1024 1024"><path d="M801.25952 251.74016l-28.9792-28.99968-150.79424 150.8352-35.1232-35.10272-99.14368 99.16416 99.14368 99.16416 99.16416-99.16416-35.10272-35.1232zM487.19872 476.8768l-29.94176 29.94176-19.61984-19.61984-99.16416 99.16416 35.10272 35.1232-150.8352 150.79424 28.95872 28.95872 150.8352-150.79424 35.10272 35.10272 99.14368-99.14368-19.61984-19.64032 29.96224-29.96224-59.92448-59.92448z m-15.48288 44.4416l15.4624-15.4624 30.98624 30.98624-15.4624 15.44192-30.98624-30.96576z" fill="" ></path></symbol><symbol id="icon-xiazai" viewBox="0 0 1024 1024"><path d="M840.5 900.3h-657c-16.5 0-29.9 13.4-29.9 29.9s13.4 29.9 29.9 29.9h657.1c16.5 0 29.9-13.4 29.9-29.9-0.1-16.6-13.5-29.9-30-29.9zM631.5 123.7V541.8H763.1L512 769.9l-251.2-228h131.7V123.7h239m0-59.7h-239c-33 0-59.7 26.7-59.7 59.7v358.4H183.5c-26.6 0-39.9 32.2-21.1 51l328.5 298.2c5.8 5.8 13.5 8.7 21.1 8.7s15.3-2.9 21.1-8.7l328.5-298.2c18.8-18.8 5.5-51-21.1-51H691.2V123.7c0-33-26.7-59.7-59.7-59.7z"  ></path></symbol><symbol id="icon-ico_reset" viewBox="0 0 1024 1024"><path d="M925.97087933 277.33133334a479.997 479.997 0 1 0 54.33566 255.9984H916.05094133a415.9974 415.9974 0 1 1-64.191599-255.9984h74.047537z"  ></path><path d="M978.64255033 61.01268534L725.33213333 371.09074734h297.59814z"  ></path></symbol><symbol id="icon-fangda" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM320 480a32 32 0 0 1 0-64h256a32 32 0 0 1 0 64z"  ></path><path d="M480 576a32 32 0 0 1-64 0V320a32 32 0 0 1 64 0z"  ></path></symbol><symbol id="icon-zidong" viewBox="0 0 1024 1024"><path d="M131.3 363.3c-19.2 47.3-28.9 97.3-28.9 148.7 0 51.3 9.7 101.3 28.9 148.7 7 17.2 15.1 33.8 24.3 49.7l15.8-49.1 42.8 13.8-39.8 123.8-42.8-13.9-80.9-26 13.8-42.8 52.3 16.8c-98-168.4-74.8-387.9 69.4-532.1C342.4 44.7 586.9 30.5 759.1 158.3l-32.2 32.2c-25.1-18-52.1-32.9-80.9-44.6-47.3-19.2-97.3-28.9-148.7-28.9-51.3 0-101.3 9.7-148.7 28.9-49 19.9-92.9 49.1-130.6 86.8s-66.9 81.7-86.7 130.6z m828.3-60.2l13.8-42.8-80.9-26-42.8-13.8-39.8 123.8 42.8 13.8 15-46.7c9.8 16.6 18.4 34 25.8 52.1 19.2 47.3 28.9 97.3 28.9 148.7 0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6C768.9 829 725 858.2 676 878.1c-47.3 19.2-97.3 28.9-148.7 28.9-51.3 0-101.3-9.7-148.7-28.9-28.8-11.7-55.9-26.6-80.9-44.6l-32.2 32.2c126.3 93.7 382.6 147.7 572.9-42.6 145.8-145.8 167.9-368.6 66.1-537.7l55.1 17.7zM474 241.2L295 730.4h64.8l50.5-148.2h195.3l54 148.2h70.3L539.6 241.2H474z m-45.9 288.3L479.8 386c11-30.9 19.4-62.1 25.4-93.4 6.9 26 17.9 59.9 32.8 101.5l48.2 135.5H428.1z" fill="" ></path></symbol><symbol id="icon-quanping" viewBox="0 0 1024 1024"><path d="M795.5 192H581c-19.6 0-35.6 15.7-36 35.3-0.4 20.3 16.4 36.7 36.7 36.7h128.4L581 393.1c-14 14-14 36.9 0 50.9s36.9 14 50.9 0L760 315.9v129c0 19.6 15.8 35.6 35.3 36 20.2 0.4 36.7-16.4 36.7-36.7V228.5c0-20.1-16.3-36.5-36.5-36.5zM442.2 760H313.8L443 630.9c14-14 14-36.9 0-50.9s-36.9-14-50.9 0L264 708.1V579c0-19.6-15.8-35.6-35.3-36-20.2-0.4-36.7 16.4-36.7 36.7v215.6c0 20.3 16.4 36.7 36.7 36.7H443c19.6 0 35.6-15.7 36-35.3 0.3-20.3-16.5-36.7-36.8-36.7z"  ></path><path d="M838 136c27.6 0 50 22.4 50 50v652c0 27.6-22.4 50-50 50H186c-27.6 0-50-22.4-50-50V186c0-27.6 22.4-50 50-50h652m0-72H186c-16.4 0-32.4 3.2-47.5 9.6-14.5 6.1-27.6 14.9-38.8 26.1-11.2 11.2-20 24.2-26.1 38.8-6.4 15.1-9.6 31.1-9.6 47.5v652c0 16.4 3.2 32.4 9.6 47.5 6.1 14.5 14.9 27.6 26.1 38.8 11.2 11.2 24.2 20 38.8 26.1 15.1 6.4 31.1 9.6 47.5 9.6h652c16.4 0 32.4-3.2 47.5-9.6 14.5-6.1 27.6-14.9 38.8-26.1 11.2-11.2 20-24.2 26.1-38.8 6.4-15.1 9.6-31.1 9.6-47.5V186c0-16.4-3.2-32.4-9.6-47.5-6.1-14.5-14.9-27.6-26.1-38.8-11.2-11.2-24.2-20-38.8-26.1-15.1-6.4-31.1-9.6-47.5-9.6z"  ></path></symbol><symbol id="icon-lianjieliu" viewBox="0 0 1024 1024"><path d="M280.224 425.856h348.608a29.536 29.536 0 1 0 0-59.072H280.224c-52.448 0-93.152-34.304-93.152-73.856s40.704-73.856 93.152-73.856h140.128C432.096 258.816 468.448 288 512 288s79.904-29.184 91.648-68.928h178.08a29.536 29.536 0 1 0 0-59.072h-179.584C588.896 122.784 553.728 96 512 96s-76.896 26.784-90.112 64H280.224C197.184 160 128 218.272 128 292.928s69.184 132.928 152.224 132.928z"  ></path><path d="M895.936 415.2A96 96 0 1 0 800 512c30.656 0 57.632-14.624 75.2-36.992 10.56 12.064 16.832 26.56 16.832 41.92 0 39.552-40.704 73.856-93.152 73.856H306.016A95.584 95.584 0 0 0 224 544a95.68 95.68 0 0 0-95.232 88.352C89.888 656.224 64 695.424 64 740.928c0 74.656 69.184 132.928 152.224 132.928h241.728A95.808 95.808 0 0 0 544 928a96 96 0 1 0 0-192 95.904 95.904 0 0 0-94.272 78.752H216.224c-52.448 0-93.152-34.304-93.152-73.856 0-17.504 8.32-33.792 21.76-46.72A95.808 95.808 0 0 0 224 736a95.68 95.68 0 0 0 95.008-86.144h479.84c83.072 0 152.224-58.272 152.224-132.928 0.032-41.536-21.824-77.568-55.136-101.728z"  ></path></symbol><symbol id="icon-shuaxin" viewBox="0 0 1024 1024"><path d="M512 919.552c-224.768 0-407.552-182.784-407.552-407.552 0-8.704 0.512-17.408 1.024-26.112l71.68 4.608c-0.512 7.168-0.512 14.336-0.512 21.504 0 185.344 150.528 335.872 335.872 335.872 86.528 0 168.448-32.768 230.912-92.16l49.152 52.224C716.288 880.128 616.96 919.552 512 919.552zM919.552 512h-71.68c0-11.776-0.512-23.552-2.048-35.328-17.92-171.52-161.28-300.544-334.336-300.544-67.584 0-132.096 19.968-187.904 57.344L284.16 174.08c67.072-45.568 145.92-69.632 227.84-69.632 209.408 0 384 156.672 405.504 365.056 1.536 13.824 2.048 28.16 2.048 42.496z" fill="#707070" ></path><path d="M140.288 290.816L28.16 491.52c-3.072 5.12 1.024 11.776 6.656 11.776H258.56c6.144 0 9.728-6.144 6.656-11.776L153.6 290.816c-3.072-5.632-10.752-5.632-13.312 0zM870.4 675.84L758.272 475.136c-3.072-5.12 1.024-11.776 6.656-11.776h223.744c6.144 0 9.728 6.144 6.656 11.776L883.712 675.84c-2.56 5.12-10.24 5.12-13.312 0zM270.336 202.24a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0zM728.576 784.896a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0z" fill="#707070" ></path></symbol><symbol id="icon-resize-" viewBox="0 0 1024 1024"><path d="M410.816 673.514667L230.997333 853.333333H384v85.333334H85.333333V640h85.333334v153.002667l179.818666-179.84 60.330667 60.373333z m-53.632-256L170.666667 230.997333V384H85.333333V85.333333h298.666667v85.333334h-153.002667l186.517334 186.517333-60.330667 60.330667z m234.666667-45.696L793.002667 170.666667H640V85.333333h298.666667v298.666667h-85.333334v-153.002667l-201.152 201.173334-60.330666-60.373334z m67.029333 226.709333L853.333333 793.002667V640h85.333334v298.666667H640v-85.333334h153.002667l-194.474667-194.453333 60.352-60.352z"  ></path></symbol><symbol id="icon-guanxitu" viewBox="0 0 1024 1024"><path d="M209.003789 401.084632l29.749895-44.948211 107.843369 71.464421-29.749895 44.894316zM682.469053 546.600421l-14.551579-51.846737 124.496842-35.031579 14.551579 51.846737zM315.068632 812.840421l-40.367158-35.678316 85.692631-96.902737 40.421053 35.732211zM597.962105 390.251789l-46.672842-26.947368 43.11579-74.64421 46.672842 26.947368zM615.639579 728.764632l41.121684-34.816 83.536842 98.735157-41.121684 34.816z" fill="#444A5C" ></path><path d="M501.221053 765.305263c-118.568421 0-215.578947-97.010526-215.578948-215.578947s97.010526-215.578947 215.578948-215.578948 215.578947 97.010526 215.578947 215.578948-97.010526 215.578947-215.578947 215.578947z m0-377.263158c-91.621053 0-161.684211 70.063158-161.684211 161.684211s70.063158 161.684211 161.684211 161.68421 161.684211-70.063158 161.68421-161.68421-75.452632-161.684211-161.68421-161.684211zM167.073684 452.715789c-59.284211 0-107.789474-48.505263-107.789473-107.789473s48.505263-107.789474 107.789473-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-26.947368-53.894737-53.894737-53.894737zM253.305263 948.547368c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-21.557895-53.894737-53.894737-53.894737zM856.926316 576.673684c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789473 107.789474-48.505263 107.789474-107.789473 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894736 53.894737-21.557895 53.894737-53.894736-21.557895-53.894737-53.894737-53.894737zM662.905263 350.315789C592.842105 350.315789 528.168421 291.031579 528.168421 215.578947s59.284211-134.736842 134.736842-134.736842 134.736842 59.284211 134.736842 134.736842-59.284211 134.736842-134.736842 134.736842z m0-215.578947c-43.115789 0-80.842105 37.726316-80.842105 80.842105s37.726316 80.842105 80.842105 80.842106 80.842105-37.726316 80.842105-80.842106-32.336842-80.842105-80.842105-80.842105zM749.136842 921.6c-43.115789 0-80.842105-37.726316-80.842105-80.842105s37.726316-80.842105 80.842105-80.842106 80.842105 37.726316 80.842105 80.842106-37.726316 80.842105-80.842105 80.842105z m0-107.789474c-16.168421 0-26.947368 10.778947-26.947368 26.947369s10.778947 26.947368 26.947368 26.947368 26.947368-10.778947 26.947369-26.947368-10.778947-26.947368-26.947369-26.947369z" fill="#444A5C" ></path></symbol><symbol id="icon-tupian" viewBox="0 0 1024 1024"><path d="M938.666667 553.92V768c0 64.8-52.533333 117.333333-117.333334 117.333333H202.666667c-64.8 0-117.333333-52.533333-117.333334-117.333333V256c0-64.8 52.533333-117.333333 117.333334-117.333333h618.666666c64.8 0 117.333333 52.533333 117.333334 117.333333v297.92z m-64-74.624V256a53.333333 53.333333 0 0 0-53.333334-53.333333H202.666667a53.333333 53.333333 0 0 0-53.333334 53.333333v344.48A290.090667 290.090667 0 0 1 192 597.333333a286.88 286.88 0 0 1 183.296 65.845334C427.029333 528.384 556.906667 437.333333 704 437.333333c65.706667 0 126.997333 16.778667 170.666667 41.962667z m0 82.24c-5.333333-8.32-21.130667-21.653333-43.648-32.917333C796.768 511.488 753.045333 501.333333 704 501.333333c-121.770667 0-229.130667 76.266667-270.432 188.693334-2.730667 7.445333-7.402667 20.32-13.994667 38.581333-7.68 21.301333-34.453333 28.106667-51.370666 13.056-16.437333-14.634667-28.554667-25.066667-36.138667-31.146667A222.890667 222.890667 0 0 0 192 661.333333c-14.464 0-28.725333 1.365333-42.666667 4.053334V768a53.333333 53.333333 0 0 0 53.333334 53.333333h618.666666a53.333333 53.333333 0 0 0 53.333334-53.333333V561.525333zM320 480a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m0-64a32 32 0 1 0 0-64 32 32 0 0 0 0 64z"  ></path></symbol><symbol id="icon-juhejiedian" viewBox="0 0 1024 1024"><path d="M533.333333 725.333333a64 64 0 1 1-64 64 64 64 0 0 1 64-64m0-85.333333a149.333333 149.333333 0 1 0 149.333334 149.333333 149.333333 149.333333 0 0 0-149.333334-149.333333z" fill="#666666" ></path><path d="M533.333333 277.333333m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M277.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M789.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M512 341.333333h42.666667v384h-42.666667z" fill="#666666" ></path><path d="M741.290667 357.504l30.165333 30.165333-225.066667 225.066667-30.165333-30.165333z" fill="#666666" ></path><path d="M558.08 582.016l-30.165333 30.165333-228.693334-228.693333 30.165334-30.165333z" fill="#666666" ></path></symbol><symbol id="icon-ziyuan" viewBox="0 0 1024 1024"><path d="M236.615854 752.86913h-0.484162A241.500139 241.500139 0 0 1 0.538332 527.733676a238.78883 238.78883 0 0 1 64.684079-180.011531 242.081134 242.081134 0 0 1 149.025146-74.367324 298.534454 298.534454 0 0 1 596.003751 25.951097V300.95207a221.262156 221.262156 0 0 1 213.031398 233.075715 222.714643 222.714643 0 0 1-221.262156 209.1581h-3.098639a27.500417 27.500417 0 0 1 0-54.904001h2.711309A167.520145 167.520145 0 0 0 968.378705 531.219644a166.261323 166.261323 0 0 0-166.16449-175.363573 151.058627 151.058627 0 0 0-18.204502 1.065157 27.500417 27.500417 0 0 1-30.211725-30.308558 240.822312 240.822312 0 0 0 1.549319-27.306752 243.727285 243.727285 0 0 0-487.357738 0 27.500417 27.500417 0 0 1-27.403584 27.500417 185.627813 185.627813 0 0 0-185.240484 197.538205A186.30564 186.30564 0 0 0 237.100016 697.965129a27.500417 27.500417 0 0 1-0.484162 54.904001z"  ></path><path d="M513.266174 1021.869686a27.500417 27.500417 0 0 1-27.500417-27.403584v-484.162268a27.500417 27.500417 0 1 1 54.904001 0v484.162268a27.403584 27.403584 0 0 1-27.403584 27.403584z"  ></path><path d="M513.266174 1024a27.500417 27.500417 0 0 1-19.366491-8.037094L342.260061 864.129619a27.500417 27.500417 0 1 1 38.732981-38.732981L513.266174 957.766602l130.530147-130.336483a27.500417 27.500417 0 0 1 38.732981 38.732982L532.632664 1015.962906a27.403584 27.403584 0 0 1-19.36649 8.037094z"  ></path></symbol><symbol id="icon-add-select" viewBox="0 0 1024 1024"><path d="M544 213.333333v266.666667H810.666667v64H544V810.666667h-64V544H213.333333v-64h266.666667V213.333333z"  ></path></symbol><symbol id="icon-sami-select" viewBox="0 0 1024 1024"><path d="M810.666667 480v64H213.333333v-64z"  ></path></symbol><symbol id="icon-icon_shuaxin" viewBox="0 0 1024 1024"><path d="M512 938.666667c-55.371852 0-109.226667-10.903704-159.857778-32.237037-48.924444-20.66963-92.823704-50.251852-130.465185-87.988149-37.736296-37.736296-67.318519-81.635556-87.988148-130.465185-21.428148-50.631111-32.237037-104.391111-32.237037-159.857777s10.903704-109.226667 32.237037-159.857778c20.66963-48.924444 50.251852-92.823704 87.988148-130.465185 37.736296-37.736296 81.635556-67.318519 130.465185-87.988149 50.631111-21.428148 104.391111-32.237037 159.857778-32.237037 63.81037 0 125.060741 14.222222 181.854815 42.382223 54.139259 26.832593 102.684444 66.085926 140.325926 113.682963 7.300741 9.197037 5.783704 22.660741-3.508148 29.961481-9.197037 7.300741-22.660741 5.783704-29.961482-3.508148-70.257778-88.936296-175.502222-139.946667-288.711111-139.946667-202.808889 0-367.881481 165.072593-367.881481 367.881482s165.072593 367.881481 367.881481 367.881481 367.881481-165.072593 367.881481-367.881481c0-11.757037 9.576296-21.333333 21.333334-21.333334S922.548148 516.361481 922.548148 528.118519c0 55.371852-10.903704 109.226667-32.237037 159.857777-20.66963 48.924444-50.251852 92.823704-87.988148 130.465185-37.736296 37.736296-81.635556 67.318519-130.465185 87.988149-50.631111 21.428148-104.485926 32.237037-159.857778 32.237037z"  ></path><path d="M817.398519 308.242963c-11.757037 0-21.333333-9.576296-21.333334-21.333333V106.666667c0-11.757037 9.576296-21.333333 21.333334-21.333334s21.333333 9.576296 21.333333 21.333334v180.242963c0 11.757037-9.481481 21.333333-21.333333 21.333333z"  ></path><path d="M817.398519 308.242963H637.155556c-11.757037 0-21.333333-9.576296-21.333334-21.333333s9.576296-21.333333 21.333334-21.333334h180.242963c11.757037 0 21.333333 9.576296 21.333333 21.333334s-9.481481 21.333333-21.333333 21.333333z"  ></path></symbol><symbol id="icon-lianjiezhong" viewBox="0 0 1024 1024"><path d="M883.396923 298.141538a99.721846 99.721846 0 0 1-142.414769 0 103.187692 103.187692 0 0 1 0-144.423384 99.721846 99.721846 0 0 1 142.414769 0 103.187692 103.187692 0 0 1 0 144.423384zM285.144615 760.438154a87.276308 87.276308 0 0 0-124.652307 0 90.269538 90.269538 0 0 0 0 126.385231c34.422154 34.894769 90.230154 34.894769 124.652307 0a90.269538 90.269538 0 0 0 0-126.424616z m482.579693 108.307692a64.472615 64.472615 0 0 1 0-90.269538 62.345846 62.345846 0 0 1 89.00923 0c24.576 24.930462 24.576 65.378462 0 90.269538a62.345846 62.345846 0 0 1-89.00923 0zM294.006154 298.141538a103.187692 103.187692 0 0 0 0-144.423384 99.721846 99.721846 0 0 0-142.454154 0 103.187692 103.187692 0 0 0 0 144.423384 99.721846 99.721846 0 0 0 142.454154 0z m324.214154-196.01723c0 56.438154-45.095385 102.163692-100.745846 102.163692-55.611077 0-100.706462-45.725538-100.706462-102.163692C416.768 45.725538 461.863385 0 517.474462 0c55.650462 0 100.745846 45.725538 100.745846 102.124308zM517.474462 870.793846c-41.747692 0-75.539692 34.264615-75.539693 76.603077 0 42.299077 33.831385 76.603077 75.539693 76.603077 41.747692 0 75.539692-34.264615 75.539692-76.603077 0-42.299077-33.792-76.603077-75.539692-76.603077z m416.768-294.990769c-27.805538 0-50.333538-22.843077-50.333539-51.042462 0-28.199385 22.528-51.042462 50.333539-51.042461 27.844923 0 50.412308 22.843077 50.372923 51.042461 0 28.199385-22.567385 51.081846-50.372923 51.081847zM201.452308 524.8c0-56.398769-45.095385-102.124308-100.745846-102.124308C45.095385 422.596923 0 468.283077 0 524.760615c0 56.398769 45.095385 102.124308 100.706462 102.124308 55.650462 0 100.745846-45.686154 100.745846-102.124308z"  ></path></symbol><symbol id="icon-loading" viewBox="0 0 1024 1024"><path d="M563.2 819.2a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8z m-320.4608-153.6a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m592.7936 25.6a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8zM947.2 477.1328a76.8 76.8 0 1 1 0 153.6 76.8 76.8 0 0 1 0-153.6zM128 307.2a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m782.6432-40.6016a51.2 51.2 0 1 1 0 102.4 51.2 51.2 0 0 1 0-102.4zM409.6 0a153.6 153.6 0 1 1 0 307.2 153.6 153.6 0 0 1 0-307.2z m384 153.6a25.6 25.6 0 1 1 0 51.2 25.6 25.6 0 0 1 0-51.2z" fill="#555555" ></path></symbol><symbol id="icon-tupushujuyuan" viewBox="0 0 1024 1024"><path d="M851.456 588.288c-13.312 0-25.6 2.048-37.888 5.12l-90.112-155.648 55.296-31.744c18.944 17.92 44.032 29.184 72.192 29.184 57.344 0 103.936-46.592 103.936-103.936s-46.592-103.936-103.936-103.936c-57.344 0-103.936 46.592-103.936 103.936 0 5.12 0.512 10.24 1.536 15.36l-58.368 33.792-82.944-143.872c26.112-25.088 41.984-59.904 41.984-98.816 0-75.776-61.44-137.216-137.216-137.216s-137.216 61.44-137.216 137.216c0 38.912 15.872 73.728 41.984 98.816l-84.992 146.944-56.832-32.768c1.024-6.144 2.048-12.8 2.048-19.456 0-57.344-46.592-103.936-103.936-103.936-57.344 0-103.936 46.592-103.936 103.936s46.592 103.936 103.936 103.936c26.624 0 51.2-10.24 69.12-26.624l56.32 32.768-88.064 152.576c-11.776-3.584-24.576-5.12-37.888-5.12-75.776 0-137.216 61.44-137.216 137.216s61.44 137.216 137.216 137.216c64.512 0 118.272-44.544 133.12-103.936h173.056v61.44c-40.96 13.824-70.656 52.736-70.656 98.816 0 57.344 46.592 103.936 103.936 103.936s103.936-46.592 103.936-103.936c0-46.08-29.696-84.48-70.656-98.816v-61.44h173.056c14.848 59.904 69.12 103.936 133.12 103.936 75.776 0 137.216-61.44 137.216-137.216s-61.44-137.728-137.216-137.728z m-410.112-450.048c0-38.912 31.744-70.656 70.656-70.656s70.656 31.744 70.656 70.656c0 13.824-4.096 26.624-10.752 37.376-12.288 19.456-33.28 32.256-57.856 33.28h-5.12c-24.576-1.024-45.568-13.824-57.856-33.28-6.144-10.752-9.728-24.064-9.728-37.376z m32.768 132.096c11.776 3.584 24.576 5.12 37.888 5.12s25.6-2.048 37.888-5.12l82.944 143.872-124.416 72.192-118.784-68.608 84.48-147.456z m-301.568 526.336c-38.912 0-70.656-31.744-70.656-70.656 0-38.912 31.744-70.656 70.656-70.656h2.56c24.576 1.024 45.568 13.824 57.856 33.28 1.024 1.536 1.536 2.56 2.56 4.096 5.12 9.728 8.192 20.992 8.192 33.28 0 11.776-3.072 23.552-8.192 33.28-12.288 22.016-35.84 37.376-62.976 37.376z m133.12-103.936c-6.144-25.6-19.456-48.128-37.888-65.536l88.064-152.576 122.88 70.656v146.944h-173.056z m239.616-151.552l120.832-69.632 90.112 155.648c-18.432 17.408-31.744 39.936-37.888 65.536h-173.056v-151.552z m306.176 255.488c-27.136 0-50.688-15.36-62.464-37.376-5.12-9.728-8.192-21.504-8.192-33.28 0-12.288 3.072-23.552 8.192-33.28 0.512-1.536 1.536-3.072 2.56-4.096 12.288-19.456 33.28-32.768 57.856-33.28h2.56c38.912 0 70.656 31.744 70.656 70.656-0.512 38.912-32.256 70.656-71.168 70.656z"  ></path></symbol><symbol id="icon-jiedian" viewBox="0 0 1024 1024"><path d="M882.1914 744.849921c-60.501005 0-112.097749 38.645092-131.425292 92.560342H244.912146c-80.468136 0-145.955927-62.61964-145.955926-139.570043 0-77.000371 65.487791-139.570043 145.955926-139.570043h136.312143c19.497433 53.585462 70.934281 91.950735 131.205434 91.950735 60.241173 0 111.688014-38.375266 131.205434-91.950735h136.452052C914.210763 558.280171 1023.340425 453.92743 1023.340425 325.660102S914.210763 93.040033 780.077216 93.040033H273.093982c-19.197627-54.165089-70.944274-93.040033-131.595182-93.040033C64.508422 0 1.928757 62.569672 1.928757 139.560049c0 76.950403 62.579665 139.570043 139.570043 139.570043 60.640915 0 112.377569-38.894931 131.585189-93.040033h506.993227c80.468136 0 145.955927 62.61964 145.955927 139.570043 0 77.000371-65.487791 139.570043-145.955927 139.570043H644.414655c-18.887826-54.734722-70.924287-94.139324-131.974938-94.139325-61.090625 0-113.097105 39.394609-131.974938 94.139325H244.912146c-134.133547 0-243.263209 104.352741-243.263209 232.620069 0 128.267328 109.129663 232.620069 243.263209 232.620069h505.524174c19.057717 54.394941 70.9043 93.529717 131.75508 93.529717 76.950403 0 139.570043-62.61964 139.570043-139.570043 0.009994-77.000371-62.61964-139.580036-139.570043-139.580036zM141.428845 207.036558c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376573 67.376574 0 37.146058-30.230515 67.376574-67.376573 67.376573z m371.000878 236.257725c37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573-37.166045 0-67.376574-30.230515-67.376574-67.376573 0.009994-37.176039 30.210528-67.376574 67.376574-67.376574z m369.761677 508.502254c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573z"  ></path></symbol><symbol id="icon-shitujiedianxianshi" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-shituxianshiquanbujiedian" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-suoxiao" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM288 480a32 32 0 0 1 0-64h320a32 32 0 0 1 0 64z"  ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1024 1024"><path d="M922.243 97.755c11.49 11.489 11.673 30.002 0.547 41.713l-0.547 0.562-109.119 109.1c57.22 78.348 42.673 195.388-35.778 273.839l-92.83 92.585c-11.572 11.54-30.264 11.653-41.97 0.253l-45.746-44.55-18.089 18.086a29.891 29.891 0 0 1-7.171 5.3l48.764 47.489c11.947 11.638 12.06 30.804 0.248 42.585l-95.875 95.629c-77.416 77.417-192.412 92.603-270.72 38.004L144.04 928.245c-11.676 11.673-30.606 11.673-42.282 0-11.49-11.489-11.673-30.002-0.547-41.713l0.547-0.562 109.677-109.657c-55.981-78.335-41.131-194.413 36.833-272.377l92.831-92.585c11.571-11.54 30.263-11.653 41.969-0.254l42.587 41.474a29.935 29.935 0 0 1 3.678-4.741l0.548-0.562 19.54-19.538-44.11-42.957c-11.828-11.522-12.057-30.422-0.6-42.23l0.351-0.355 95.875-95.63c76.927-76.926 190.96-92.408 269.23-39.03L879.961 97.755c11.676-11.673 30.606-11.673 42.282 0zM362.451 474.49l-71.916 71.727-1.884 1.911c-61.822 63.545-67.916 156.289-16.185 208.02C324.72 808.4 418.82 801.655 482.43 738.044l74.422-74.234-194.401-189.32z m129.807-5.04l-20.096 20.094a30.035 30.035 0 0 1-4.643 3.8l63.25 61.595a29.82 29.82 0 0 1 5.113-7.308l0.547-0.561 17.532-17.531-61.703-60.089z m260.889-198.691c-52.254-52.254-146.353-45.509-209.964 18.102l-74.422 74.234 194.4 189.322 71.939-71.75 1.862-1.888c61.822-63.545 67.916-156.29 16.185-208.02z" fill="#333333" ></path></symbol><symbol id="icon-xiantiao" viewBox="0 0 1024 1024"><path d="M827.076923 157.538462a39.384615 39.384615 0 1 1-14.375385 76.051692L233.590154 812.701538a39.384615 39.384615 0 1 1-22.291692-22.291692L790.409846 211.298462A39.384615 39.384615 0 0 1 827.076923 157.538462z" fill="#333333" ></path></symbol></svg>', a = (a = document.getElementsByTagName("script"))[a.length - 1].getAttribute("data-injectcss");
  if (a && !t.__iconfont__svg__cssinject__) {
    t.__iconfont__svg__cssinject__ = !0;
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (h) {
      console && console.log(h);
    }
  }
  function r() {
    s || (s = !0, n());
  }
  o = function() {
    var h, d, u, g;
    (g = document.createElement("div")).innerHTML = c, c = null, (u = g.getElementsByTagName("svg")[0]) && (u.setAttribute("aria-hidden", "true"), u.style.position = "absolute", u.style.width = 0, u.style.height = 0, u.style.overflow = "hidden", h = u, (d = document.body).firstChild ? (g = h, (u = d.firstChild).parentNode.insertBefore(g, u)) : d.appendChild(h));
  }, document.addEventListener ? ~["complete", "loaded", "interactive"].indexOf(document.readyState) ? setTimeout(o, 0) : (e = function() {
    document.removeEventListener("DOMContentLoaded", e, !1), o();
  }, document.addEventListener("DOMContentLoaded", e, !1)) : document.attachEvent && (n = o, i = t.document, s = !1, (l = function() {
    try {
      i.documentElement.doScroll("left");
    } catch {
      return void setTimeout(l, 50);
    }
    r();
  })(), i.onreadystatechange = function() {
    i.readyState == "complete" && (i.onreadystatechange = null, r());
  });
})(window);
const Mt = () => window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width, Gt = () => window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height, St = (t) => {
  let o = 0;
  for (let e = 0; e < t.length; e++) {
    const i = t[e].charCodeAt(0);
    i < 0 || i > 255 ? o += 2 : o++;
  }
  return o;
};
let F = !1;
const Pt = () => {
  try {
    document.createEvent("TouchEvent"), F = !0;
  } catch {
  }
};
Pt();
const f = (...t) => {
  typeof window < "u" && window.relationGraphDebug && console.log("[relation-graph:debug]", ...t);
};
let A = { x: 0, y: 0 };
const H = { x: 0, y: 0 }, R = { x: 0, y: 0 };
let $, D;
const Q = (t) => {
  const o = {
    clientX: 0,
    clientY: 0
  };
  if (F) {
    const e = t.touches || t.targetTouches;
    if (!e)
      throw new Error("error targetTouches");
    o.clientX = e[0].clientX, o.clientY = e[0].clientY;
  } else
    o.clientX = t.clientX, o.clientY = t.clientY;
  return o;
}, N = {
  startDrag(t, o, e, n) {
    n ? $ = (i, s, l) => {
      const c = i - R.x, a = s - R.y;
      n(c, a, H, R, l);
    } : $ = (i, s) => {
      A.x = H.x + (i - R.x), A.y = H.y + (s - R.y);
    }, D = e, A = o, H.x = A.x, H.y = A.y, f("[canvas]onDragStart...", F, t);
    try {
      const i = Q(t);
      R.x = i.clientX, R.y = i.clientY, F ? (t.preventDefault(), document.body.addEventListener("touchmove", N.onNodeMove), document.body.addEventListener("touchend", N.onNodeDragend)) : (document.body.addEventListener("mousemove", N.onNodeMove), document.body.addEventListener("mouseup", N.onNodeDragend));
    } catch (i) {
      console.error(i.message);
    }
  },
  onNodeMove(t) {
    const o = Q(t);
    $(o.clientX, o.clientY, t);
  },
  onNodeDragend(t) {
    F ? (document.body.removeEventListener("touchmove", N.onNodeMove), document.body.removeEventListener("touchend", N.onNodeDragend)) : (document.body.removeEventListener("mousemove", N.onNodeMove), document.body.removeEventListener("mouseup", N.onNodeDragend)), f("Node dragend"), D && D(
      A.x - H.x,
      A.y - H.y,
      t
    );
  },
  transName4Circle(t) {
    let o = 0, e = [];
    const n = [];
    for (let i = 0; i < t.length; i++)
      e.push(t[i]), e.length === Lt[o] && (n.push(e.join("")), o++, e = []);
    return e.length > 0 && n.push(e.join("")), n.join("<br>");
  },
  getColorId(t) {
    return t = t.replace("#", ""), t = t.replace("(", ""), t = t.replace(")", ""), t = t.replace(/,/, "-"), t;
  }
}, Lt = [4, 5, 6, 4, 2, 100];
var zt = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("div", { directives: [{ name: "show", rawName: "v-show", value: t.isAllowShowNode(t.nodeProps), expression: "isAllowShowNode(nodeProps)" }], ref: "seeksRGNode", staticClass: "rel-node-peel", style: { left: t.nodeProps.x + "px", top: t.nodeProps.y + "px", opacity: t.nodeProps.opacity > 1 ? t.nodeProps.opacity / 100 : t.nodeProps.opacity } }, [t.nodeProps.expandHolderPosition && t.nodeProps.expandHolderPosition !== "hide" || t.relationGraph.options.defaultExpandHolderPosition && t.relationGraph.options.defaultExpandHolderPosition !== "hide" && t.nodeProps.lot.childs && t.nodeProps.lot.childs.length > 0 ? e("div", { staticClass: "c-btn-open-close", class: ["c-expand-positon-" + (t.nodeProps.expandHolderPosition || t.relationGraph.options.defaultExpandHolderPosition)] }, [e("span", { class: t.expandButtonClass, style: { "background-color": t.nodeProps.color || t.relationGraph.options.defaultNodeColor }, on: { click: function(n) {
    return n.stopPropagation(), t.expandOrCollapseNode.apply(null, arguments);
  } } })]) : t._e(), t.nodeProps.html ? e("div", { domProps: { innerHTML: t._s(t.nodeProps.html) }, on: { click: function(n) {
    return n.stopPropagation(), t.onclick(n);
  }, mousedown: function(n) {
    return !n.type.indexOf("key") && t._k(n.keyCode, "left", 37, n.key, ["Left", "ArrowLeft"]) || "button" in n && n.button !== 0 ? null : (n.stopPropagation(), t.onDragStart(n));
  }, touchstart: function(n) {
    return n.stopPropagation(), t.onDragStart(n);
  }, mouseover: function(n) {
    return n.stopPropagation(), t.onMouseHover(n);
  }, mouseout: function(n) {
    return n.stopPropagation(), t.onMouseOut(n);
  } } }) : e("div", { staticClass: "rel-node", class: ["rel-node-shape-" + (t.nodeProps.nodeShape === void 0 ? t.relationGraph.options.defaultNodeShape : t.nodeProps.nodeShape), "rel-node-type-" + t.nodeProps.type, t.nodeProps.id === t.relationGraph.options.checkedNodeId ? "rel-node-checked" : "", t.nodeProps.selected ? "rel-node-selected" : "", t.nodeProps.styleClass, t.hovering ? "rel-node-hover" : "", t.nodeProps.innerHTML ? "rel-diy-node" : ""], style: { "background-color": t.nodeProps.color === void 0 ? t.relationGraph.options.defaultNodeColor : t.nodeProps.color, color: t.nodeProps.fontColor === void 0 ? t.relationGraph.options.defaultNodeFontColor : t.nodeProps.fontColor, border: (t.nodeProps.borderColor || t.relationGraph.options.defaultNodeBorderColor) + " solid " + (t.nodeProps.borderWidth || t.relationGraph.options.defaultNodeBorderWidth) + "px", width: (t.nodeProps.width || t.relationGraph.options.defaultNodeWidth) + "px", height: (t.nodeProps.height || t.relationGraph.options.defaultNodeHeight) + "px" }, on: { click: function(n) {
    return n.stopPropagation(), t.onclick(n);
  }, mousedown: function(n) {
    return !n.type.indexOf("key") && t._k(n.keyCode, "left", 37, n.key, ["Left", "ArrowLeft"]) || "button" in n && n.button !== 0 ? null : (n.stopPropagation(), t.onDragStart(n));
  }, touchstart: function(n) {
    return n.stopPropagation(), t.onDragStart(n);
  }, mouseover: function(n) {
    return n.stopPropagation(), t.onMouseHover(n);
  }, mouseout: function(n) {
    return n.stopPropagation(), t.onMouseOut(n);
  } } }, [t.relationGraph.options.hideNodeContentByZoom === !0 && t.relationGraph.options.canvasZoom < 40 ? t._e() : [t._t("node", function() {
    return [t.nodeProps.innerHTML ? e("div", { domProps: { innerHTML: t._s(t.nodeProps.innerHTML) } }) : e("div", { staticClass: "c-node-text", style: { color: t.nodeProps.fontColor || t.relationGraph.options.defaultNodeFontColor } }, [e("span", { domProps: { innerHTML: t._s(t.nodeProps.text) } })])];
  }, { node: t.nodeProps })]], 2)]);
}, Nt = [];
function E(t, o, e, n, i, s, l, c) {
  var a = typeof t == "function" ? t.options : t;
  o && (a.render = o, a.staticRenderFns = e, a._compiled = !0), n && (a.functional = !0), s && (a._scopeId = "data-v-" + s);
  var r;
  if (l ? (r = function(u) {
    u = u || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, !u && typeof __VUE_SSR_CONTEXT__ < "u" && (u = __VUE_SSR_CONTEXT__), i && i.call(this, u), u && u._registeredComponents && u._registeredComponents.add(l);
  }, a._ssrRegister = r) : i && (r = c ? function() {
    i.call(
      this,
      (a.functional ? this.parent : this).$root.$options.shadowRoot
    );
  } : i), r)
    if (a.functional) {
      a._injectStyles = r;
      var h = a.render;
      a.render = function(g, _) {
        return r.call(_), h(g, _);
      };
    } else {
      var d = a.beforeCreate;
      a.beforeCreate = d ? [].concat(d, r) : [r];
    }
  return {
    exports: t,
    options: a
  };
}
const Et = {
  name: "SeeksRGNode",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    nodeProps: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    }
  },
  data() {
    return {
      hovering: !1,
      borderColor: "",
      dragging: !1
    };
  },
  computed: {
    expandButtonClass() {
      return this.nodeProps.expanded === !1 ? "c-expanded" : "c-collapsed";
    }
  },
  created() {
  },
  mounted() {
    this.refreshNodeProperties();
  },
  updated() {
    this.refreshNodeProperties();
  },
  beforeDestroy() {
    this.$refs.seeksRGNode.remove();
  },
  methods: {
    refreshNodeProperties() {
      (this.nodeProps.el.offsetWidth !== this.$refs.seeksRGNode.offsetWidth || this.nodeProps.el.offsetHeight !== this.$refs.seeksRGNode.offsetHeight) && this.relationGraph.updateNodeOffsetSize(this.nodeProps, this.$refs.seeksRGNode.offsetWidth, this.$refs.seeksRGNode.offsetHeight);
    },
    expandOrCollapseNode(t) {
      this.relationGraph.expandOrCollapseNode(this.nodeProps, t);
    },
    onDragStart(t) {
      this.relationGraph.options.disableDragNode || this.nodeProps.disableDrag || (this.dragging = !0, this.hovering = !1, N.startDrag(t, this.nodeProps, this.onNodeDraged, (o, e, n) => {
        const i = o / (this.relationGraph.options.canvasZoom / 100) + n.x, s = e / (this.relationGraph.options.canvasZoom / 100) + n.y;
        this.relationGraph.setNodePosition(this.nodeProps, i, s);
      }));
    },
    onNodeDraged(t, o, e) {
      if (t === 0 && o === 0) {
        this.relationGraph.onNodeClick(this.nodeProps, e);
        return;
      }
      this.relationGraph.options.isMoveByParentNode && this.nodeProps.lot.childs.forEach((n) => {
        n.x += t, n.y += o;
      }), Math.abs(t) + Math.abs(o) > 6 ? setTimeout(() => {
        f("delay end dragging", this.dragging), this.dragging = !1;
      }, 100) : this.dragging = !1;
    },
    onMouseHover() {
      this.dragging || this.relationGraph.options.disableNodeClickEffect !== !0 && this.nodeProps.disableDefaultClickEffect !== !0 && (this.hovering = !0);
    },
    onMouseOut() {
      this.relationGraph.options.disableNodeClickEffect !== !0 && this.nodeProps.disableDefaultClickEffect !== !0 && (this.hovering = !1);
    },
    onclick(t) {
      this.dragging || this.relationGraph.onNodeClick(this.nodeProps, t);
    },
    isAllowShowNode(t) {
      return t.isShow !== !1 && t.isHide !== !0 && (!t.lot.parent || this.isAllowShowNode(t.lot.parent) === !0);
    }
  }
}, tt = {};
var Ot = /* @__PURE__ */ E(
  Et,
  zt,
  Nt,
  !1,
  Bt,
  null,
  null,
  null
);
function Bt(t) {
  for (let o in tt)
    this[o] = tt[o];
}
const At = /* @__PURE__ */ function() {
  return Ot.exports;
}();
var Ht = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("g", [e("path", { class: ["c-rg-line", t.checked ? "c-rg-line-checked" : ""], style: { "stroke-width": (t.relation.lineWidth ? t.relation.lineWidth : t.relationGraph.options.defaultLineWidth) + "px" }, attrs: { d: t.relationGraph.createLinePath(t.link, t.relationIndex, t.relation), stroke: t.checked ? t.relationGraph.options.checkedLineColor : t.relation.color ? t.relation.color : t.relationGraph.options.defaultLineColor, "marker-start": t.relation.showStartArrow && t.relationGraph.getArrow(t.relation, t.link, !0), "marker-end": t.relation.showEndArrow && t.relationGraph.getArrow(t.relation, t.link, !1), fill: "none" }, on: { click: function(n) {
    return t.onClick(t.relation, n);
  } } }), t.relationGraph.options.defaultShowLineLabel && t.relationGraph.options.canvasZoom > 40 ? e("g", { attrs: { transform: t.relationGraph.getTextTransform(t.relation, t.relation.textPositon.x, t.relation.textPositon.y, t.relation.textPositon.rotate) } }, [e("text", { key: "t-" + t.relation.id, staticClass: "c-rg-line-text", style: { fill: t.checked ? t.relationGraph.options.checkedLineColor : t.relation.fontColor ? t.relation.fontColor : t.relation.color ? t.relation.color : void 0 }, attrs: { x: 0, y: 0 }, on: { click: function(n) {
    return t.onClick(n);
  } } }, [t._v(" " + t._s(t.relation.text) + " ")])]) : t._e()]);
}, Rt = [];
const It = {
  name: "SeeksRGLine",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    link: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    relation: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    relationIndex: {
      mustUseProp: !0,
      default: () => 0,
      type: Number
    }
  },
  computed: {
    checked() {
      return this.link.seeks_id === this.relationGraph.options.checkedLineId;
    }
  },
  data() {
    return {
      is_flashing: !1
    };
  },
  show() {
    this.isShow = !0;
  },
  watch: {},
  mounted() {
  },
  methods: {
    onClick(t, o) {
      this.relationGraph.onLineClick(t, this.link, o);
    },
    isAllowShowNode: function(t) {
      return t.isShow !== !1 && t.isHide !== !0 && (!t.lot.parent || this.isAllowShowNode(t.lot.parent, !1) === !0);
    },
    flash() {
    }
  }
}, et = {};
var Wt = /* @__PURE__ */ E(
  It,
  Ht,
  Rt,
  !1,
  Ft,
  null,
  null,
  null
);
function Ft(t) {
  for (let o in et)
    this[o] = et[o];
}
const Vt = /* @__PURE__ */ function() {
  return Wt.exports;
}(), ot = 0, x = {
  getRectPoint: function(t, o, e, n, i, s, l, c) {
    const a = t + i / 2, r = o + s / 2, h = e + l / 2, d = n + c / 2, u = a < h ? 1 : -1, g = r < d ? 1 : -1;
    if (d === r)
      return { x: a + u * i / 2, y: r };
    const _ = Math.abs((h - a) / (d - r)), v = i / s;
    let b = 0, M = 0;
    return _ < v ? (b = u * s / 2 * _, M = g * s / 2) : (b = u * i / 2, M = g * i / 2 / _), { x: a + b, y: r + M };
  },
  getRectPointBasic: function(t, o, e, n, i, s, l, c) {
    const a = t + i / 2, r = o + s / 2, h = e + l / 2, d = n + c / 2;
    let u = d === r ? 0 : (h - a) / (d - r);
    u === 0 && (u = (h - a) / (d - r + 1));
    const g = i / c;
    let _ = 0, v = 0, b = "1";
    return -1 * g < u && u < g ? (b = "2", r < d ? (_ = s / 2 * u, v = s / 2) : (_ = -1 * s / 2 * u, v = -1 * s / 2)) : (a < h ? (_ = 1 * i / 2, v = 1 * i / 2 / u) : (_ = -1 * i / 2, v = -1 * i / 2 / u), b = "3"), { x: a + _, y: r + v, _case: b };
  },
  getRectJoinPoint: function(t, o, e, n, i, s, l, c) {
    const a = t + i / 2, r = o + s / 2, h = e + l / 2, d = n + c / 2, u = Math.round(Math.atan2(d - r, h - a) * 180 / 3.14) + 135;
    return u >= 0 && u < 90 ? { x: t + i / 2, y: o - 5 } : u >= 90 && u < 180 ? { x: t + i + 5, y: o + s / 2 } : u >= 180 && u < 270 ? { x: t + i / 2, y: o + s + 5 } : { x: t - 5, y: o + s / 2 };
  },
  getRectHJoinPoint: function(t, o, e, n, i, s, l) {
    const c = s / 2;
    return t + i < e ? { x: t + i + 5, y: o + c } : t + i < e + l ? { x: t - 5, y: o + c } : { x: t - 5, y: o + c };
  },
  getRectVJoinPoint: function(t, o, e, n, i, s, l, c) {
    const a = i / 2;
    return o + s < n ? { y: o + s + 5, x: t + a } : o + s < n + c ? { y: o - 5, x: t + a } : { y: o - 5, x: t + a };
  },
  getBorderPoint: function(t, o, e, n, i, s, l, c, a) {
    return a === 0 ? this.getCirclePoint(t, o, e, n, i, s, l, c) : this.getRectPoint(t, o, e, n, i, s, l, c);
  },
  getBorderPoint4MultiLine: function(t, o, e, n, i, s, l, c, a, r, h, d) {
    return a === 0 ? this.getCirclePoint4MultiLine(t, o, e, n, i, s, l, c, r, h, d) : this.getRectPoint(t, o, e, n, i, s, l, c);
  },
  getCirclePoint: function(t, o, e, n, i, s, l, c) {
    const a = e + l / 2, r = n + c / 2, h = t + i / 2, d = o + s / 2, u = a - h;
    if (u === 0)
      return { x: h, y: d - s / 2 * (r < d ? 1 : -1) };
    const _ = (r - d) / u, v = Math.sqrt(1 / (1 / Math.pow(i / 2, 2) + _ ** 2 / Math.pow(s / 2, 2))) * (a < h ? 1 : -1), b = _ * v;
    return { x: h - v, y: d - b };
  },
  getCirclePoint4MultiLine: function(t, o, e, n, i, s, l, c, a, r, h) {
    a && (h = r - h - 1);
    const d = e + l / 2, u = n + c / 2, g = t + i / 2, _ = o + s / 2, v = d - g;
    if (v === 0)
      return { x: g, y: _ - s / 2 * (u < _ ? 1 : -1) };
    const b = 40 / (r + 1) * (h + 1) - 20, M = u - _, k = Math.sqrt(Math.pow(v, 2) + Math.pow(M, 2)) * b / v, C = M / v, S = i / 2, G = s / 2, m = d < g ? 1 : -1, I = (-1 * S ** 2 * C * k + S * G * Math.sqrt(G ** 2 + C ** 2 * S ** 2 - k ** 2, 2) / m) / (G ** 2 + S ** 2 * C ** 2), V = C * I + k;
    return { x: g - I, y: _ - V };
  },
  getCirclePointBasic: function(t, o, e, n, i, s, l, c, a) {
    const r = t + i / 2, h = o + s / 2, d = e + l / 2, u = n + c / 2;
    return this.h = d - r, this.s = u - h, this.c = Math.sqrt(this.h * this.h + this.s * this.s), this.l = this.c - a, this.v = this.l * this.h / this.c * -1, this.t = this.l * this.s / this.c * -1, { x: d + this.v, y: u + this.t };
  },
  getCirclePointPlus: function(t, o, e, n, i, s, l, c) {
    const a = t + i / 2, r = o + s / 2, h = e + l / 2, d = n + c / 2;
    return this.h = h - a, this.s = d - r, this.c = Math.sqrt(this.h * this.h + this.s * this.s), this.v = (this.c - i / 2) * this.h / this.c * -1, this.t = (this.c - s / 2) * this.s / this.c * -1, { x: h + this.v, y: d + this.t };
  },
  getOvalPoint: function(t, o, e, n, i) {
    return {
      x: t + e * Math.sin((ot + n * (360 / i) + 0) * Math.PI / 180),
      y: o + e * Math.cos((ot + n * (360 / i) + 0) * Math.PI / 180) * -1
    };
  },
  getAngleType: function(t, o) {
    if (t >= 0 && o >= 0)
      return 1;
    if (t < 0 && o >= 0)
      return 2;
    if (t < 0 && o < 0)
      return 3;
    if (t >= 0 && o < 0)
      return 4;
  },
  getTextAngle: function(t, o, e, n) {
    let i = Math.atan(Math.abs((n - o) / (e - t))) * 180 / Math.PI;
    return e > t && n > o || (e > t && n < o ? i = -i : e < t && n > o ? i = 180 - i : i = i - 180), Math.abs(i) > 90 && (i = i + 180), Math.round(i);
  },
  getTreePointFromTop: function(t, o, e, n, i, s) {
    return t ? {
      x: t - 300 + Math.max(600 / ((i === 1 ? 2 : i) - 1), 80) * n,
      y: o + e
    } : {
      x: (s.canvas_width - s.node_width) / 2,
      y: (s.canvas_height - s.node_height) / 2 - 200
    };
  },
  getTreePointFromRight: function(t, o, e, n, i, s) {
    return t ? {
      x: t - e,
      y: o - 200 + Math.max(400 / ((i === 1 ? 2 : i) - 1), 80) * n
    } : {
      x: (s.canvas_width - s.node_width) / 2 + 300,
      y: (s.canvas_height - s.node_height) / 2
    };
  },
  getTreePointFromBottom: function(t, o, e, n, i, s) {
    return t ? {
      x: t - 300 + Math.max(600 / ((i === 1 ? 2 : i) - 1), 80) * n,
      y: o - e
    } : {
      x: (s.canvas_width - s.node_width) / 2,
      y: (s.canvas_height - s.node_height) / 2 + 200
    };
  },
  getTreePointFromLeft: function(t, o, e, n, i, s) {
    return t ? {
      x: t + e,
      y: o - 200 + Math.max(400 / ((i === 1 ? 2 : i) - 1), 80) * n
    } : {
      x: (s.canvas_width - s.node_width) / 2 - 300,
      y: (s.canvas_height - s.node_height) / 2
    };
  },
  analysisNodes: function(t, o, e, n, i) {
    o.length > n.max_length && (n.max_length = o.length), e > n.max_deep && (n.max_deep = e);
    const s = {
      level: e,
      all_size: o.length,
      all_strength: 0
    }, l = [];
    o.forEach((a) => {
      a.lot || (a.lot = {}), a.lot.eached = !0, a.lot.subling = s, a.lot.level = e, t.push(a);
    });
    let c = 0;
    o.forEach((a) => {
      let r = 0;
      if (a.targetNodes) {
        let h = 0;
        a.targetNodes.forEach((d) => {
          d.lot || (d.lot = { eached: !1 }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = a, d.lot.index_of_parent = h++, a.lot.childs.push(d), l.push(d), r++) : a.lot.childs.push(d));
        });
      }
      a.lot.strength = r > 0 ? r : 1, s.all_strength += a.lot.strength, a.lot.strength_plus = s.all_strength, a.lot.index_of_level = c, a.lot.childs_size = r, c++;
    }), s.all_strength > n.max_strength && (n.max_strength = s.all_strength), l.length > 0 ? this.analysisNodes(t, l, e + 1, n, i) : (t.forEach((a) => {
      a.lot.childs_size > 0 && (a.lot.strengthWithChilds = 0);
    }), t.forEach((a) => {
      a.lot.childs_size === 0 && (a.lot.strengthWithChilds = 1, this.conductStrengthToParents(a));
    }), this.analysisDataTree([t[0]], 0));
  },
  analysisNodes4Didirectional: function(t, o, e, n, i) {
    o.length > n.max_length && (n.max_length = o.length), e > n.max_deep && (n.max_deep = e);
    const s = {
      level: e,
      all_size: o.length,
      all_strength: 0
    }, l = [];
    o.forEach((a) => {
      a.lot || (a.lot = {}), a.lot.eached = !0, a.lot.subling = s, a.lot.level = e, t.push(a);
    });
    let c = 0;
    o.forEach((a) => {
      let r = 0;
      if (i === 0) {
        let h = 0;
        a.targetNodes.forEach((d) => {
          d.lot || (d.lot = { eached: !1 }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = a, d.lot.index_of_parent = h++, a.lot.childs.push(d), l.push(d), r++) : a.lot.childs.push(d));
        });
      } else if (i === -1) {
        let h = 0;
        a.targetFrom.forEach((d) => {
          d.lot || (d.lot = { eached: !1 }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = a, d.lot.index_of_parent = h++, a.lot.childs.push(d), l.push(d), r++) : a.lot.childs.push(d));
        });
      } else {
        let h = 0;
        a.targetTo.forEach((d) => {
          d.lot || (d.lot = { eached: !1 }), d.lot.eached || (x.isAllowShowNode(d) ? (d.lot.eached = !0, d.lot.parent = a, d.lot.index_of_parent = h++, a.lot.childs.push(d), l.push(d), r++) : a.lot.childs.push(d));
        });
      }
      a.lot.strength = r > 0 ? r : 1, s.all_strength += a.lot.strength, a.lot.strength_plus = s.all_strength, a.lot.index_of_level = c, a.lot.childs_size = r, c++;
    }), s.all_strength > n.max_strength && (n.max_strength = s.all_strength), l.length > 0 ? x.analysisNodes4Didirectional(t, l, e + (i === -1 ? -1 : 1), n, i) : (t.forEach((a) => {
      a.lot.childs_size > 0 && (a.lot.strengthWithChilds = 0);
    }), t.forEach((a) => {
      a.lot.childs_size === 0 && (a.lot.strengthWithChilds = 1, x.conductStrengthToParents(a));
    }), x.analysisDataTree([t[0]], 0, i));
  },
  conductStrengthToParents(t) {
    t.lot.parent && (t.lot.parent.lot.strengthWithChilds += 1, this.conductStrengthToParents(t.lot.parent));
  },
  analysisDataTree: function(t, o, e) {
    e === void 0 && (e = 1);
    const n = [];
    let i = 0;
    t.forEach((s) => {
      (s.lot.level === 0 || e === (s.lot.level < 0 ? -1 : 1)) && (s.lot.childs_size > 0 && s.lot.childs.forEach((l) => {
        n.push(l);
      }), s.lot.parent && i < s.lot.parent.lot.strengthWithChilds_from && (i = s.lot.parent.lot.strengthWithChilds_from), s.lot.strengthWithChilds_from = i, i += s.lot.strengthWithChilds);
    }), n.length > 0 && this.analysisDataTree(n, o + e, e);
  },
  isAllowShowNode: function(t) {
    return t.isShow !== !1 && t.isHide !== !0 && (!t.lot.parent || this.isAllowShowNode(t.lot.parent, !1) === !0);
  }
}, Tt = (t, o, e, n) => {
  const i = t - e, s = o - n, l = i ** 2, c = s ** 2, a = l + c;
  return Math.sqrt(a);
};
var jt = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("g", [e("use", { class: ["c-rg-line", t.checked ? "c-rg-line-checked" : ""], attrs: { "xlink:href": "#" + t.relationGraph.options.instanceId + "-" + t.link.seeks_id + "-" + t.relationIndex }, on: { click: function(n) {
    return t.onClick(t.relation, n);
  } } }), e("text", { staticClass: "c-rg-line-text", style: { fill: t.checked ? t.relationGraph.options.checkedLineColor : t.relation.fontColor ? t.relation.fontColor : t.relation.color ? t.relation.color : void 0 }, attrs: { x: t.textOffset, y: "0" }, on: { click: function(n) {
    return t.onClick(t.relation, n);
  } } }, [e("textPath", { attrs: { "xlink:href": "#" + t.relationGraph.options.instanceId + "-" + t.link.seeks_id + "-" + t.relationIndex, startOffset: "0", "text-anchor": "start", method: "align", spacing: "auto" } }, [t._v(" " + t._s(t.relation.text) + " ")])])]);
}, $t = [];
const Dt = {
  name: "SeeksRGLine",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    link: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    relation: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    relationIndex: {
      mustUseProp: !0,
      default: () => 0,
      type: Number
    }
  },
  computed: {
    checked() {
      return this.link.seeks_id === this.relationGraph.options.checkedLineId;
    },
    textOffset() {
      const t = St(this.relation.text) * 10;
      return (Tt(this.link.fromNode.x, this.link.fromNode.y, this.link.toNode.x, this.link.toNode.y) - t) / 2;
    }
  },
  data() {
    return {
      is_flashing: !1
    };
  },
  show() {
    this.isShow = !0;
  },
  watch: {},
  mounted() {
  },
  methods: {
    onClick(t, o) {
      this.relationGraph.onLineClick(t, this.link, o);
    },
    isAllowShowNode: function(t) {
      return t.isShow !== !1 && t.isHide !== !0 && (!t.lot.parent || this.isAllowShowNode(t.lot.parent, !1) === !0);
    },
    flash() {
    }
  }
}, nt = {};
var Zt = /* @__PURE__ */ E(
  Dt,
  jt,
  $t,
  !1,
  Jt,
  null,
  null,
  null
);
function Jt(t) {
  for (let o in nt)
    this[o] = nt[o];
}
const Ut = /* @__PURE__ */ function() {
  return Zt.exports;
}();
var Yt = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return t.linkProps.isHide !== !0 && t.isAllowShowNode(t.linkProps.fromNode) && t.isAllowShowNode(t.linkProps.toNode) ? e("g", { ref: "seeksRGLink", class: [t.relationGraph.options.checkedLineId == t.linkProps.seeks_id ? "c-rg-link-checked" : ""], attrs: { transform: "translate(0,0)" } }, [t._l(t.linkProps.relations, function(n, i) {
    return [t._t("line", function() {
      return [(t.relationGraph.options.lineUseTextPath || n.useTextPath) && n.isHide === !1 ? e("RGLineTextByPath", { key: "l-" + n.id, attrs: { "relation-graph": t.relationGraph, link: t.linkProps, relation: n, "relation-index": i } }) : n.isHide === !1 ? e("RGLineSmart", { key: "l-" + n.id, attrs: { "relation-graph": t.relationGraph, link: t.linkProps, relation: n, "relation-index": i } }) : t._e()];
    }, { line: n, relationIndex: i })];
  })], 2) : t._e();
}, Xt = [];
const qt = {
  name: "SeeksRGLink",
  components: { RGLineSmart: Vt, RGLineTextByPath: Ut },
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    linkProps: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    }
  },
  data() {
    return {
      is_flashing: !1
    };
  },
  show() {
    this.isShow = !0;
  },
  watch: {},
  mounted() {
  },
  methods: {
    onClick(t, o) {
      this.relationGraph.onLineClick(t, this.linkProps, o);
    },
    isAllowShowNode: function(t) {
      return t.isShow !== !1 && t.isHide !== !0 && (!t.lot.parent || this.isAllowShowNode(t.lot.parent) === !0);
    },
    flash() {
    }
  }
}, it = {};
var Kt = /* @__PURE__ */ E(
  qt,
  Yt,
  Xt,
  !1,
  Qt,
  null,
  null,
  null
);
function Qt(t) {
  for (let o in it)
    this[o] = it[o];
}
const te = /* @__PURE__ */ function() {
  return Kt.exports;
}();
var ee = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("path", { class: [t.checked ? "c-rg-line-checked" : ""], style: { "stroke-width": (t.relation.lineWidth ? t.relation.lineWidth : t.relationGraph.options.defaultLineWidth) + "px" }, attrs: { id: t.relationGraph.options.instanceId + "-" + t.link.seeks_id + "-" + t.relationIndex, d: t.relationGraph.createLinePath(t.link, t.relationIndex, t.relation), stroke: t.checked ? t.relationGraph.options.checkedLineColor : t.relation.color ? t.relation.color : t.relationGraph.options.defaultLineColor, "marker-start": t.relation.showStartArrow && t.relationGraph.getArrow(t.relation, t.link, !0), "marker-end": t.relation.showEndArrow && t.relationGraph.getArrow(t.relation, t.link, !1), fill: "none" } });
}, oe = [];
const ne = {
  name: "SeeksRGLink",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    link: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    relation: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    },
    relationIndex: {
      mustUseProp: !0,
      default: () => 0,
      type: Number
    }
  },
  computed: {
    checked() {
      return this.link.seeks_id === this.relationGraph.options.checkedLineId;
    }
  },
  data() {
    return {
      is_flashing: !1
    };
  },
  show() {
    this.isShow = !0;
  },
  methods: {}
}, st = {};
var ie = /* @__PURE__ */ E(
  ne,
  ee,
  oe,
  !1,
  se,
  null,
  null,
  null
);
function se(t) {
  for (let o in st)
    this[o] = st[o];
}
const ae = /* @__PURE__ */ function() {
  return ie.exports;
}();
var re = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("div", { staticClass: "rel-map", class: [t.relationGraph.options.layoutClassName, t.relationGraph.options.backgrounImageNoRepeat ? "rel-map-background-norepeat" : ""], style: { width: "100%", height: "100%", "background-image": "url(" + t.relationGraph.options.backgrounImage + ")" }, on: { mousedown: function(n) {
    return !n.type.indexOf("key") && t._k(n.keyCode, "left", 37, n.key, ["Left", "ArrowLeft"]) || "button" in n && n.button !== 0 ? null : (n.stopPropagation(), t.onDragStart(n));
  }, touchstart: function(n) {
    return n.stopPropagation(), t.onDragStart(n);
  }, wheel: t.mouseListener } }, [e("div", { ref: "seeksRGCanvas", staticClass: "rel-map-canvas", style: t.canvasSizeAndPosition }, [t._t("canvas-plug"), e("div", { ref: "rgCanvas", staticClass: "rel-linediv", staticStyle: { overflow: "visible" } }, [e("svg", { staticStyle: { overflow: "visible" }, style: { width: t.relationGraph.options.canvasSize.width + "px", height: t.relationGraph.options.canvasSize.height + "px" }, attrs: { xmlns: "http://www.w3.org/2000/svg", version: "2.0" } }, [e("defs", [e("linearGradient", { attrs: { id: t.relationGraph.options.instanceId + "-lineStyle", x1: "1", y1: "0", x2: "0", y2: "0" } }, [e("stop", { attrs: { offset: "0%", "stop-color": "#e52c5c" } }), e("stop", { attrs: { offset: "100%", "stop-color": "#FD8B37" } })], 1), e("marker", { attrs: { id: t.relationGraph.options.instanceId + "-arrow-default", markerWidth: t.relationGraph.options.defaultLineMarker.markerWidth, markerHeight: t.relationGraph.options.defaultLineMarker.markerHeight, refX: t.relationGraph.options.defaultLineMarker.refX, refY: t.relationGraph.options.defaultLineMarker.refY, "marker-units": "strokeWidth", orient: "auto", viewBox: "0 0 12 12" } }, [e("path", { style: { fill: t.relationGraph.options.defaultLineColor }, attrs: { d: t.relationGraph.options.defaultLineMarker.data } })]), e("marker", { attrs: { id: t.relationGraph.options.instanceId + "-start-arrow-default", markerWidth: t.relationGraph.options.defaultLineMarker.markerWidth, markerHeight: t.relationGraph.options.defaultLineMarker.markerHeight, refX: t.relationGraph.options.defaultLineMarker.refX, refY: t.relationGraph.options.defaultLineMarker.refY, "marker-units": "strokeWidth", orient: "auto", viewBox: "0 0 12 12" } }, [e("path", { style: { fill: t.relationGraph.options.defaultLineColor }, attrs: { d: t.relationGraph.options.defaultLineMarker.data, transform: "translate(12,12)rotate(180)" } })]), e("marker", { attrs: { id: t.relationGraph.options.instanceId + "-arrow-checked", markerUnits: "strokeWidth", markerWidth: "12", markerHeight: "12", viewBox: "0 0 12 12", refX: "6", refY: "6", orient: "auto" } }, [e("path", { style: { fill: t.relationGraph.options.checkedLineColor }, attrs: { d: "M2,2 L10,6 L2,10 L6,6 L2,2" } })]), e("marker", { attrs: { id: t.relationGraph.options.instanceId + "-start-arrow-checked", markerUnits: "strokeWidth", markerWidth: "12", markerHeight: "12", viewBox: "0 0 12 12", refX: "6", refY: "6", orient: "auto" } }, [e("path", { style: { fill: t.relationGraph.options.checkedLineColor }, attrs: { d: "M2,2 L10,6 L2,10 L6,6 L2,2", transform: "translate(12,12)rotate(180)" } })]), t._l(t.relationGraph.allLineColors, function(n) {
    return e("marker", { key: n.id, attrs: { id: t.relationGraph.options.instanceId + "-arrow-" + n.id, markerWidth: t.relationGraph.options.defaultLineMarker.markerWidth, markerHeight: t.relationGraph.options.defaultLineMarker.markerHeight, refX: t.relationGraph.options.defaultLineMarker.refX, refY: t.relationGraph.options.defaultLineMarker.refY, "marker-units": "strokeWidth", orient: "auto" } }, [e("path", { attrs: { fill: t.relationGraph.options.defaultLineMarker.color || n.color, d: t.relationGraph.options.defaultLineMarker.data } })]);
  }), t._l(t.relationGraph.allLineColors, function(n) {
    return e("marker", { key: "start-" + n.id, attrs: { id: t.relationGraph.options.instanceId + "-start-arrow-" + n.id, markerWidth: t.relationGraph.options.defaultLineMarker.markerWidth, markerHeight: t.relationGraph.options.defaultLineMarker.markerHeight, refX: t.relationGraph.options.defaultLineMarker.refX, refY: t.relationGraph.options.defaultLineMarker.refY, "marker-units": "strokeWidth", orient: "auto" } }, [e("path", { attrs: { fill: t.relationGraph.options.defaultLineMarker.color || n.color, d: t.relationGraph.options.defaultLineMarker.data, transform: "translate(12,12)rotate(180)" } })]);
  }), t._l(t.relationGraph.graphData.links, function(n) {
    return [t._l(n.relations, function(i, s) {
      return [t.relationGraph.options.lineUseTextPath || i.useTextPath ? e("SeeksRGLinePath", { key: i.id, attrs: { "relation-graph": t.relationGraph, link: n, relation: i, "relation-index": s } }) : t._e()];
    })];
  })], 2), t._l(t.relationGraph.graphData.links, function(n) {
    return e("SeeksRGLink", { key: n.seeks_id, attrs: { "link-props": n, "relation-graph": t.relationGraph }, scopedSlots: t._u([{ key: "line", fn: function(i) {
      var s = i.line;
      return [t._t("line", null, { line: s, link: n })];
    } }], null, !0) });
  })], 2)]), e("div", { staticClass: "rel-nodediv rel-nodediv-for-webkit" }, t._l(t.relationGraph.graphData.nodes, function(n) {
    return e("SeeksRGNode", { key: n.seeks_id, attrs: { "node-props": n, "relation-graph": t.relationGraph }, scopedSlots: t._u([{ key: "node", fn: function(i) {
      var s = i.node;
      return [t._t("node", null, { node: s })];
    } }], null, !0) });
  }), 1)], 2)]);
}, le = [];
const ce = {
  name: "RelationGraphCanvas",
  components: { SeeksRGNode: At, SeeksRGLink: te, SeeksRGLinePath: ae },
  props: {
    relationGraph: {
      mustUseProp: !1,
      default: () => ({}),
      type: Object
    }
  },
  data() {
    return {};
  },
  computed: {
    canvasSizeAndPosition() {
      return {
        width: this.relationGraph.options.canvasSize.width + "px",
        height: this.relationGraph.options.canvasSize.height + "px",
        "margin-left": this.relationGraph.options.canvasOffset.x + "px",
        "margin-top": this.relationGraph.options.canvasOffset.y + "px",
        "background-color": "transparent",
        transform: "scale(" + this.relationGraph.options.canvasZoom / 100 + "," + this.relationGraph.options.canvasZoom / 100 + ")"
      };
    }
  },
  watch: {},
  created() {
    f("[RGCanvas created]");
  },
  mounted() {
    f("[RGCanvas mounted]"), this.init(), this.relationGraph.setCanvasDom(this.$refs.seeksRGCanvas);
  },
  beforeDestroy() {
  },
  methods: {
    init() {
      this.$refs.rgCanvas.style.setProperty("--stroke", "url('#" + this.relationGraph.options.instanceId + "-lineStyle')"), this.$refs.rgCanvas.style.setProperty("--markerEnd", "url('#" + this.relationGraph.options.instanceId + "-start-arrow-default')"), this.$refs.rgCanvas.style.setProperty("--markerStart", "url('#" + this.relationGraph.options.instanceId + "-arrow-default')"), this.$refs.rgCanvas.style.setProperty("--markerEndChecked", "url('#" + this.relationGraph.options.instanceId + "-arrow-checked')"), this.$refs.rgCanvas.style.setProperty("--markerStartChecked", "url('#" + this.relationGraph.options.instanceId + "-start-arrow-checked')");
    },
    mouseListener(t) {
      if (this.relationGraph.options.disableZoom)
        return t.cancelBubble = !1, !0;
      try {
        t.cancelBubble = !0, t.preventDefault(), t.stopPropagation();
      } catch {
      }
      const o = {
        x: t.clientX,
        y: t.clientY
      };
      let e = t.deltaY;
      e === void 0 && (e = t.wheelDelta);
      const n = -1;
      e > 0 ? this.relationGraph.zoom(5 * n, o) : this.relationGraph.zoom(-5 * n, o);
    },
    onDragStart(t) {
      if (this.relationGraph.options.disableDragCanvas)
        return;
      let o;
      if (F) {
        let e = null, n = null;
        o = (i, s, l, c, a) => {
          const r = a.touches || a.targetTouches, h = r[0];
          if (r && r.length > 1) {
            a.preventDefault();
            const d = r[1];
            e || (e = { x: d.clientX, y: d.clientY }, n = this.relationGraph.options.canvasZoom);
            const u = { x: h.clientX, y: h.clientY }, g = { x: d.clientX, y: d.clientY }, _ = Math.hypot(e.x - c.x, e.y - c.y), b = Math.hypot(g.x - u.x, g.y - u.y) / _, M = n * b;
            this.relationGraph.setZoom(M);
          } else {
            const d = h.clientX, u = h.clientY, g = l.x + (d - c.x), _ = l.y + (u - c.y);
            this.relationGraph.setCanvasOffset(g, _);
          }
        };
      }
      N.startDrag(t, this.relationGraph.options.canvasOffset, this.onDragEnd, o);
    },
    onDragEnd() {
    }
  }
}, at = {};
var he = /* @__PURE__ */ E(
  ce,
  re,
  le,
  !1,
  de,
  "4782cad0",
  null,
  null
);
function de(t) {
  for (let o in at)
    this[o] = at[o];
}
const fe = /* @__PURE__ */ function() {
  return he.exports;
}();
var ue = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("div", [e("div", { staticClass: "c-setting-panel-button", class: [], on: { click: t.toggleSettingPanel } }, [t._v(" Debug ")]), t.showSettingPanel ? e("div", { staticClass: "c-setting-panel", class: [] }, [e("div", { staticClass: "c-debug-tools-row" }, [e("button", { on: { click: t.printOptions } }, [t._v("print options in console")])]), e("div", { staticClass: "c-debug-tools-row" }, [e("button", { on: { click: t.printData } }, [t._v("print json data in console")])]), e("div", { staticClass: "c-debug-tools-row" }, [t._v("debug log status: " + t._s(t.relationGraph.options.debug)), e("button", { on: { click: t.enableDevlog } }, [t._v(t._s(t.relationGraph.options.debug ? "disable" : "enable") + " debug log")])])]) : t._e()]);
}, pe = [];
const _e = {
  name: "GraphSettingPanel",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    }
  },
  data() {
    return {
      search_text: "",
      showSettingPanel: !1,
      currentLayoutName: ""
    };
  },
  methods: {
    toggleSettingPanel() {
      this.showSettingPanel = !this.showSettingPanel;
    },
    printOptions() {
      console.log("options:", this.relationGraph.getGraphJsonOptions());
    },
    printData() {
      console.log("data:", this.relationGraph.getGraphJsonData());
    },
    enableDevlog() {
      this.relationGraph.enableDebugLog(!this.relationGraph.options.debug), f("debugLog:", this.relationGraph.options.debug);
    }
  }
}, rt = {};
var me = /* @__PURE__ */ E(
  _e,
  ue,
  pe,
  !1,
  ge,
  "684b5fc8",
  null,
  null
);
function ge(t) {
  for (let o in rt)
    this[o] = rt[o];
}
const xe = /* @__PURE__ */ function() {
  return me.exports;
}();
var ye = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("div", { ref: "miniView", staticClass: "c-mini-graph" }, [e("div", { staticClass: "c-mini-canvas", style: {
    width: t.viewWidth + "px",
    height: t.miniViewHeight() + "px"
  } }, [t._l(t.relationGraph.graphData.nodes, function(n) {
    return [t.isAllowShowNode(n) ? e("div", { key: n.id, staticClass: "c-mini-node", style: {
      left: (n.x - t.minX) * t.viewWidth / (t.maxX - t.minX) + "px",
      top: (n.y - t.minY) * t.viewHeight / (t.maxY - t.minY) + "px"
    } }) : t._e()];
  })], 2)]);
}, ve = [];
const we = {
  name: "GraphMiniView",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    }
  },
  data() {
    return {
      viewWidth: 100,
      viewHeight: 0,
      minX: 0,
      maxX: 0,
      minY: 0,
      maxY: 0,
      zoom: 1
    };
  },
  mounted() {
  },
  methods: {
    miniViewHeight() {
      let t = 9999, o = -9999, e = 9999, n = -9999;
      for (let i = 0; i < this.relationGraph.graphData.nodes.length; i++) {
        const s = this.relationGraph.graphData.nodes[i];
        s.x < t && (t = s.x), s.x > o && (o = s.x), s.y < e && (e = s.y), s.y > n && (n = s.y);
      }
      return this.viewHeight = (n - e) * this.viewWidth / (o - t), this.minX = t, this.minY = e, this.maxX = o, this.maxY = n, this.viewHeight;
    },
    getPositionData() {
      const t = this.viewWidth / this.relationGraph.options.canvasNVInfo.width, o = this.relationGraph.options.viewNVInfo.width * t, e = this.relationGraph.options.viewNVInfo.height * t;
      let n = (this.relationGraph.options.viewNVInfo.x - this.relationGraph.options.canvasNVInfo.x) * t * (this.relationGraph.options.canvasZoom / 100), i = (this.relationGraph.options.viewNVInfo.y - this.relationGraph.options.canvasNVInfo.y) * t * (this.relationGraph.options.canvasZoom / 100);
      return n = n * 100 / o, i = i * 100 / o, {
        width: o + "px",
        height: e + "px",
        left: n + "px",
        top: i + "px"
      };
    },
    isAllowShowNode(t) {
      return x.isAllowShowNode(t);
    }
  }
}, lt = {};
var be = /* @__PURE__ */ E(
  we,
  ye,
  ve,
  !1,
  Ce,
  "80f8cbb6",
  null,
  null
);
function Ce(t) {
  for (let o in lt)
    this[o] = lt[o];
}
const ke = /* @__PURE__ */ function() {
  return be.exports;
}();
class ut {
  constructor(o, e) {
    p(this, "graphSetting");
    p(this, "config");
    p(this, "rootNode", null);
    p(this, "allNodes", []);
    p(this, "__origin_nodes", []);
    this.config = o, this.graphSetting = e, f("new SeeksBidirectionalTreeLayouter:", this.config), this.config.from || (this.config.from = "left"), this.config.levelDistance && typeof this.config.levelDistance == "string" && (this.config.levelDistanceArr = this.config.levelDistance.split(",").map((n) => parseInt(n)));
  }
  refresh() {
    f("SeeksBidirectionalTreeLayouter:refresh:nodes:", this.__origin_nodes.length), this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  analysisNodes4Didirectional(o, e, n, i, s) {
    e.length > i.max_length && (i.max_length = e.length), n > i.max_deep && (i.max_deep = n);
    const l = {
      level: n,
      all_size: e.length,
      all_strength: 0
    }, c = [];
    e.forEach((r) => {
      r.lot || (r.lot = {}), r.lot.eached = !0, r.lot.subling = l, r.lot.level = n, o.push(r);
    });
    let a = 0;
    e.forEach((r) => {
      let h = 0;
      if (s === -1) {
        let d = 0;
        r.targetFrom.forEach((u) => {
          u.lot || (u.lot = { eached: !1 }), u.lot.eached || (x.isAllowShowNode(u) ? (u.lot.eached = !0, u.lot.parent = r, u.lot.index_of_parent = d++, r.lot.childs.push(u), c.push(u), h++) : r.lot.childs.push(u));
        });
      } else {
        let d = 0;
        r.targetTo.forEach((u) => {
          u.lot || (u.lot = { eached: !1 }), u.lot.eached || (x.isAllowShowNode(u) ? (u.lot.eached = !0, u.lot.parent = r, u.lot.index_of_parent = d++, r.lot.childs.push(u), c.push(u), h++) : r.lot.childs.push(u));
        });
      }
      r.lot.strength = h > 0 ? h : 1, l.all_strength += r.lot.strength, r.lot.strength_plus = l.all_strength, r.lot.index_of_level = a, r.lot.childs_size = h, a++;
    }), l.all_strength > i.max_strength && (i.max_strength = l.all_strength), c.length > 0 ? this.analysisNodes4Didirectional(o, c, n + s, i, s) : (o.forEach((r) => {
      r.lot.childs_size > 0 && (r.lot.strengthWithChilds = 0);
    }), o.forEach((r) => {
      r.lot.childs_size === 0 && (r.lot.strengthWithChilds = 1, x.conductStrengthToParents(r));
    }), x.analysisDataTree([o[0]], 0, s));
  }
  placeNodes(o, e) {
    if (f("SeeksBidirectionalTreeLayouter:placeNodes"), e)
      f("layout by root:", e);
    else {
      console.error("root is null");
      return;
    }
    this.__origin_nodes = o, this.rootNode = e, o.forEach((i) => {
      i.lot.eached = !1, i.lot.notLeafNode = !1, i.lot.childs = [], i.lot.index_of_parent = 0, i.lot.strength = 0, i.lot.strengthWithChilds_from = 0, i.lot.strengthWithChilds = 0, i.lot.prevNode = void 0, i.lot.nextNode = void 0, i.lot.placed = !1;
    }), this.allNodes = [];
    let n = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    this.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, n, -1), this.placeNodesPosition(this.rootNode, this.allNodes, n), this.allNodes = [], n = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    }, this.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, n, 1), this.placeNodesPosition(this.rootNode, this.allNodes, n);
  }
  placeNodesPosition(o, e, n) {
    const i = this.graphSetting.viewSize.width, s = this.graphSetting.viewSize.height, l = 0, c = 0;
    if (o.fixed !== !0) {
      const r = parseInt(this.config.centerOffset_x) || 0, h = parseInt(this.config.centerOffset_y) || 0;
      o.lot.x = -(o.el.offsetWidth || o.width) / 2 + r, o.lot.y = -(o.el.offsetHeight || o.height) / 2 + h, this.config.from === "top" ? o.lot.y -= this.graphSetting.viewSize.height / 2 - (o.el.offsetHeight || o.height) - 100 : this.config.from === "bottom" ? o.lot.y += this.graphSetting.viewSize.height / 2 - (o.el.offsetHeight || o.height) - 200 : this.config.from === "right" ? o.lot.x += this.graphSetting.viewSize.width / 2 - (o.el.offsetWidth || o.width) - 100 : o.lot.x -= this.graphSetting.viewSize.width / 2 - (o.el.offsetWidth || o.width) - 100, f("graph offset:", r, h), f("create rootNode coordinates:", o.lot.x, o.lot.y), o.x = o.lot.x + l, o.y = o.lot.y + c;
    } else
      f("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", o.text, o.x, o.y), o.origin_x === void 0 && (o.origin_x = o.x, o.origin_y = o.y), o.lot.x = o.origin_x, o.lot.y = o.origin_y, o.x = o.lot.x + l, o.y = o.lot.y + c, f("\u56FA\u5B9A\u4F4D\u7F6E\u7684rootNode:", o.text, o.x, o.y);
    o.lot.placed = !0;
    const a = {
      __mapWidth: i,
      __mapHeight: s
    };
    this.placeRelativePosition(o, n, a), e.forEach((r) => {
      if (r.fixed === !0) {
        r.lot.placed = !0;
        return;
      }
      if (!x.isAllowShowNode(r))
        return;
      const h = r.offset_x || 0, d = r.offset_y || 0;
      r.x = r.offset_x + r.lot.x + h, r.y = r.offset_y + r.lot.y + d, r.lot.placed = !0;
    });
  }
  placeRelativePosition(o, e, n) {
    if (this.config.from === "left" || this.config.from === "right") {
      const i = this.config.min_per_height || 80, s = this.config.max_per_height || 400, l = this.config.min_per_width || 430, c = this.config.max_per_width || 650;
      let a = Math.round((n.__mapWidth - 10) / (e.max_deep + 2));
      a < l && (a = l), a > c && (a = c);
      let r = Math.round(n.__mapHeight / (e.max_strength + 1));
      r < i && (r = i), r > s && (r = s), this.allNodes.forEach((h) => {
        h.fixed !== !0 && h.lot.placed !== !0 && h !== o && (this.config.from === "right" ? h.lot.x = o.lot.x - this.getLevelDistance(h, h.lot.subling.level, a) : h.lot.x = o.lot.x + this.getLevelDistance(h, h.lot.subling.level, a));
      }), this.allNodes.forEach((h) => {
        h.fixed !== !0 && h.lot.level !== 0 && (h.lot.y = o.lot.y + r * (e.max_strength / -2 + h.lot.strengthWithChilds_from + h.lot.strengthWithChilds / 2));
      });
    } else {
      const i = this.config.min_per_height || 250, s = this.config.max_per_height || 400, l = this.config.min_per_width || 250, c = this.config.max_per_width || 500;
      let a = Math.round((n.__mapWidth - 10) / (e.max_strength + 2));
      a < l && (a = l), a > c && (a = c);
      let r = Math.round((n.__mapHeight - 10) / (e.max_deep + 2));
      r < i && (r = i), r > s && (r = s), this.allNodes.forEach((h) => {
        h.fixed !== !0 && h.lot.placed !== !0 && h !== o && (this.config.from === "bottom" ? h.lot.y = o.lot.y - this.getLevelDistance(h, h.lot.subling.level, r) : h.lot.y = o.lot.y + this.getLevelDistance(h, h.lot.subling.level, r));
      }), this.allNodes.forEach((h) => {
        h.fixed !== !0 && h.lot.level !== 0 && (h.lot.x = o.lot.x + a * (e.max_strength / -2 + h.lot.strengthWithChilds_from + h.lot.strengthWithChilds / 2));
      });
    }
  }
  getLevelDistance(o, e, n) {
    if (this.config.levelDistanceArr && this.config.levelDistanceArr.length > 0) {
      let i = 0;
      for (let s = 0; s < e; s++) {
        const l = this.config.levelDistanceArr[s] || 100;
        i += l;
      }
      return i;
    } else
      return e * n;
  }
}
class pt {
  constructor(o, e) {
    p(this, "graphSetting");
    p(this, "config");
    p(this, "rootNode", null);
    p(this, "allNodes", []);
    p(this, "__origin_nodes", []);
    p(this, "layoutTimes", 0);
    this.config = o, this.graphSetting = e;
  }
  refresh() {
    f("SeeksCenterLayouter:refresh"), this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(o, e) {
    if (f("SeeksCenterLayouter:placeNodes"), !e) {
      f("root is null:", e);
      return;
    }
    f("layout by root:", e), this.__origin_nodes = o, this.rootNode = e, o.forEach((i) => {
      i.lot.eached = !1, i.lot.notLeafNode = !1, i.lot.childs = [], i.lot.index_of_parent = 0, i.lot.strength = 0, i.lot.prevNode = void 0, i.lot.nextNode = void 0, i.lot.placed = !1;
    }), this.allNodes = [];
    const n = {
      max_deep: 1,
      max_length: 1
    };
    x.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, n, 0), e.lot.x = -(e.el.offsetWidth || e.width) / 2, e.lot.y = -(e.el.offsetHeight || e.height) / 2, f("root position:", e.lot.x, e.lot.y), this.placeRelativePosition(this.rootNode, n), this.allNodes.forEach((i) => {
      if (i.fixed === !0 || !x.isAllowShowNode(i))
        return;
      const s = i.offset_x || 0, l = i.offset_y || 0;
      i.x = i.lot.x + s, i.y = i.lot.y + l, i.lot.placed = !0;
    }), f("Start Auto Layout.....");
  }
  placeRelativePosition(o, e) {
    const n = this.config.distance_coefficient === void 0 ? 1 : this.config.distance_coefficient;
    let i = Math.round((this.graphSetting.viewSize.height + this.graphSetting.viewSize.width) / e.max_deep * 0.2) * n;
    f("analyticResult:", e, i, this.config.distance_coefficient), i < 150 * n && (i = 150 * n);
    let s = 0;
    this.allNodes.forEach((c) => {
      if (c.lot.subling.level === 1) {
        s = Math.round(c.lot.subling.all_size * 50 / Math.PI / 2), s < i && (s = i);
        const a = x.getOvalPoint(o.lot.x, o.lot.y, c.lot.subling.level * s, c.lot.strength_plus - c.lot.strength / 2, c.lot.subling.all_strength);
        c.lot.x = a.x, c.lot.y = a.y;
      }
    });
    const l = Math.round(300 * n);
    this.allNodes.forEach((c) => {
      if (c.lot.subling.level > 1) {
        const a = c.lot.parent.lot.strength_plus - c.lot.parent.lot.strength, h = (c.lot.parent.lot.strength_plus - a) / (c.lot.parent.lot.childs_size + 1) * (c.lot.index_of_parent + 1), d = x.getOvalPoint(o.lot.x, o.lot.y, (c.lot.subling.level - 1) * l + s, a + h, c.lot.parent.lot.subling.all_strength);
        c.lot.x = d.x, c.lot.y = d.y;
      }
    });
  }
  autoLayout(o) {
    if (o && (this.layoutTimes = 0), f("this.layoutTimes:", this.layoutTimes), this.layoutTimes > 300) {
      this.graphSetting.autoLayouting = !1;
      return;
    }
    this.layoutTimes++, this.__origin_nodes.forEach((e) => {
      e.Fx = 0, e.Fy = 0;
    });
    for (const e in this.__origin_nodes) {
      const n = this.__origin_nodes[e];
      if (n.lot.placed === !0)
        for (const i in this.__origin_nodes) {
          const s = this.__origin_nodes[i];
          s.lot.placed === !0 && e !== i && this.addGravityByNode(n, s);
        }
    }
    for (const e in this.__origin_nodes)
      this.__origin_nodes[e].lot.parent && this.addElasticByLine(this.__origin_nodes[e].lot.parent, this.__origin_nodes[e]);
    for (const e in this.__origin_nodes)
      this.applyToNodePosition(this.__origin_nodes[e]);
    window.setTimeout(() => {
      this.autoLayout();
    }, 30);
  }
  stop() {
    this.layoutTimes = 1e3;
  }
  addElasticByLine(o, e) {
    let n = Math.sqrt(Math.pow(o.y - e.y, 2) + Math.pow(o.x - e.x, 2));
    n > 1e3 && (n = 1e3);
    const i = n < 30 ? 0 : (n - 30) * 0.05, s = i, l = i, c = (o.x - e.x) / n, a = (o.y - e.y) / n;
    this.addFtoNode(o, c * s * -1, a * s * -1, 1), this.addFtoNode(e, c * l, a * l, 1);
  }
  addGravityByNode(o, e) {
    const n = Math.sqrt(Math.pow(o.y - e.y, 2) + Math.pow(o.x - e.x, 2)), i = 300;
    let s = n > i ? 0 : (i - n) * 0.03;
    const l = (o.x - e.x) / n, c = (o.y - e.y) / n;
    this.addFtoNode(o, l * s, c * s, 0), this.addFtoNode(e, l * s * -1, c * s * -1, 0);
  }
  getNodeFWeight(o) {
    let e = o.lot.level;
    return e > 7 && (e = 7), e < 0 && (e = 0), (8 - e) / 8;
  }
  addFtoNode(o, e, n) {
    isNaN(e) || isNaN(n) || (e = e / o.lot.strength, n = n / o.lot.strength, e > 50 && (e = 50), n > 50 && (n = 50), e < -50 && (e = -50), n < -50 && (n = -50), o.Fx += e, o.Fy += n);
  }
  applyToNodePosition(o) {
    const e = Math.round(o.Fx), n = Math.round(o.Fy);
    o.x = o.x + e, o.y = o.y + n, o.Fx = 0, o.Fy = 0;
  }
}
class _t {
  constructor(o, e) {
    p(this, "setting");
    p(this, "config");
    p(this, "rootNode", null);
    p(this, "allNodes", []);
    p(this, "__origin_nodes", []);
    p(this, "__max_deep", 1);
    p(this, "__max_length", 1);
    p(this, "layoutTimes", 0);
    this.config = o, this.setting = e;
  }
  checkMaxDeepAndLength(o, e) {
    o.length > this.__max_length && (this.__max_length = o.length), e > this.__max_deep && (this.__max_deep = e);
    const n = {
      level: e,
      all_size: o.length,
      all_strength: 0
    }, i = [];
    o.forEach((c) => {
      c.lot || (c.lot = {}), c.lot.eached = !0, c.lot.subling = n, this.allNodes.push(c);
    });
    let s = 0, l;
    o.forEach((c) => {
      let a = 0;
      c.targetNodes && (c.targetNodes.forEach((r) => {
        f("child node::", r.type, r.lot.eached), r.lot || (r.lot = { eached: !1 }), r.type === "node" && r.targetNodes.length <= 1 ? r.lot.eached || (r.lot.parent = c, r.lot.index_of_p_childs = a, r.lot.prevNode = l, l && (l.lot.nextNode = r), l = r, c.lot.childs.push(r), c.lot.eached = !0, i.push(r), a++) : r.lot.notLeafNode = !0;
      }), c.targetNodes.forEach((r) => {
        r.lot.notLeafNode && (r.lot || (r.lot = { eached: !1 }), r.lot.eached || (r.lot.parent = c, r.lot.index_of_p_childs = a, r.lot.prevNode = l, l && (l.lot.nextNode = r), l = r, c.lot.childs.push(r), c.lot.eached = !0, i.push(r), a++));
      })), c.lot.strength = a > 0 ? a : 1, n.all_strength += c.lot.strength, c.lot.strength_plus = n.all_strength, c.lot.level_index = s, c.lot.childs_size = a, s++;
    }), i.length > 0 && this.checkMaxDeepAndLength(i, e + 1);
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(o, e) {
    if (e)
      f("layout by root:", e);
    else {
      f("root is null:", e);
      return;
    }
    this.__origin_nodes = o, this.rootNode = e, o.forEach((h) => {
      h.lot.eached = !1, h.lot.notLeafNode = !1, h.lot.childs = [], h.lot.parent = void 0, h.lot.index_of_p_childs = 0, h.lot.strength = 0, h.lot.prevNode = void 0, h.lot.nextNode = void 0;
    }), this.allNodes = [], f("max before:", this.__max_deep, this.__max_length), this.checkMaxDeepAndLength([this.rootNode], 0), f("max after:", this.__max_deep, this.__max_length), this.setting.canvasSize.width = 4e3, this.setting.canvasSize.height = 4e3, this.setting.heightByContent && (f("\u6839\u636E\u6570\u636E\u8C03\u6574\u89C6\u7A97\u9AD8\u5EA6"), this.setting.viewSize.height = 1600), this.setting.resetViewSize(this.setting);
    const n = this.setting.viewSize.width, i = this.setting.viewSize.height, s = this.setting.canvasOffset.x, l = this.setting.canvasOffset.y, c = {
      x: n / 2 - s,
      y: i / 2 - l
    };
    c.y > 800 - l && (c.y = 800 - l);
    const a = this.allNodes.length;
    let r = a * 90 / Math.PI / 2;
    r < 200 && (r = 200), r > 800 && (r = 800), this.allNodes.forEach((h, d) => {
      const u = x.getOvalPoint(c.x, c.y, r, d, a);
      h.x = u.x, h.y = u.y;
    }), f("Start Auto Layout.....");
  }
  adjustLevel2Y(o) {
    for (let e = 0; e < this.allNodes.length; e++) {
      const n = this.allNodes[e];
      if (n.lot.subling.level === 1 && n.lot.childs_size === 0) {
        let i = Math.round(o / (n.lot.subling.all_size + 1));
        i > 70 && (i = 70), f(i, o, n.lot.subling.all_size, n.lot.subling.all_strength, n.lot.strength);
        for (let s = 0; s < this.allNodes.length; s++) {
          const l = this.allNodes[s];
          if (l.lot.subling.level === 1 && l !== n) {
            const c = Math.abs(n.y - l.y);
            if (c < i - 2) {
              f("__y_diff", n.name, l.name, c), n.y = l.y + i, e--;
              break;
            }
          }
        }
      }
    }
  }
  autoLayout(o) {
    if (o && (this.layoutTimes = 0), f("this.layoutTimes:", this.layoutTimes), this.layoutTimes > 300) {
      this.setting.autoLayouting = !1;
      return;
    }
    this.layoutTimes++, this.allNodes.forEach((e) => {
      e.Fx = 0, e.Fy = 0;
    });
    for (const e in this.allNodes)
      for (const n in this.allNodes)
        e !== n && this.addGravityByNode(this.allNodes[e], this.allNodes[n]);
    for (const e in this.allNodes)
      this.allNodes[e].lot.parent && this.addElasticByLine(this.allNodes[e].lot.parent, this.allNodes[e]);
    for (const e in this.allNodes)
      this.applyToNodePosition(this.allNodes[e]);
    window.setTimeout(() => {
      this.autoLayout();
    }, 30);
  }
  stop() {
    this.layoutTimes = 1e3;
  }
  addElasticByLine(o, e) {
    const n = Math.sqrt(Math.pow(o.y - e.y, 2) + Math.pow(o.x - e.x, 2)), i = n < 30 ? 0 : (n - 30) * 0.01;
    this.addFtoNode(o, (o.x - e.x) * i * -1, (o.y - e.y) * i * -1), this.addFtoNode(e, (e.x - o.x) * i * -1, (e.y - o.y) * i * -1);
  }
  addGravityByNode(o, e) {
    const n = Math.sqrt(Math.pow(o.y - e.y, 2) + Math.pow(o.x - e.x, 2)), i = n > 300 ? 0 : (300 - n) * 0.02;
    let s = o.x - e.x, l = o.y - e.y;
    s === 0 && (s = 1), l === 0 && (l = 1), this.addFtoNode(o, s * i, l * i), this.addFtoNode(e, s * -1 * i, l * -1 * i);
  }
  addFtoNode(o, e, n) {
    o.Fx += e, o.Fy += n;
  }
  applyToNodePosition(o) {
    if (this.rootNode === o)
      return;
    o.Fx > 1e3 && (o.Fx = 3e3), o.Fy > 1e3 && (o.Fy = 3e3), o.Fx < -1e3 && (o.Fx = -3e3), o.Fy < -1e3 && (o.Fy = -3e3);
    const e = Math.round(o.Fx * 0.02), n = Math.round(o.Fy * 0.02);
    o.x = o.x + e, o.y = o.y + n, o.Fx = 0, o.Fy = 0;
  }
}
class J {
  constructor(o, e) {
    p(this, "graphOptions");
    p(this, "config");
    p(this, "rootNode", null);
    p(this, "allNodes", []);
    p(this, "__origin_nodes", []);
    p(this, "layoutTimes", 0);
    p(this, "maxLayoutTimes", 300);
    p(this, "justLayoutSingleNode", !1);
    p(this, "byNode", !0);
    p(this, "byLine", !0);
    this.config = o, this.graphOptions = e;
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(o, e) {
    if (e)
      f("layout by root:", e);
    else {
      f("root is null:", e);
      return;
    }
    this.__origin_nodes = o, this.rootNode = e;
    let n = 0;
    this.__origin_nodes.forEach((i) => {
      i.lot.placed && n++;
    }), this.analysisNodes(), n === 0 ? this.initNodesPosition() : this.__origin_nodes.forEach((i) => {
      i.lot.placed || (i.x || (i.x = Math.floor(Math.random() * 200) - 100), i.x || (i.y = Math.floor(Math.random() * 200) - 100), i.lot.placed = !0);
    }), f("Start Auto Layout....."), this.autoLayout(!0);
  }
  analysisNodes() {
    this.__origin_nodes.forEach((e) => {
      e.lot.eached = !1, e.lot.notLeafNode = !1, e.lot.childs = [], e.lot.index_of_parent = 0, e.lot.strength = 0, e.lot.prevNode = void 0, e.lot.nextNode = void 0, e.lot.placed = !1;
    }), this.allNodes = [];
    const o = {
      max_deep: 1,
      max_length: 1
    };
    x.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, o, 0);
  }
  initNodesPosition() {
    this.rootNode.lot.x = -(this.rootNode.el.offsetWidth || this.rootNode.width) / 2, this.rootNode.lot.y = -(this.rootNode.el.offsetHeight || this.rootNode.height) / 2, f("root position:", this.rootNode.lot.x, this.rootNode.lot.y), f("[layout canvasOffset]", this.graphOptions.viewSize, this.graphOptions.canvasSize), this.placeRelativePosition(this.rootNode), this.allNodes.forEach((o) => {
      o.fixed !== !0 && (!x.isAllowShowNode(o) || (o.x = o.lot.x, o.y = o.lot.y, o.lot.placed = !0));
    });
  }
  placeRelativePosition(o) {
    let e = 80;
    this.allNodes.forEach((n) => {
      if (n.lot.subling.level === 1) {
        e = n.lot.subling.all_size * 20 / Math.PI / 2, e < 80 && (e = 80);
        const i = x.getOvalPoint(o.lot.x, o.lot.y, n.lot.subling.level * e, n.lot.strength_plus - n.lot.strength / 2, n.lot.subling.all_strength);
        n.lot.x = i.x, n.lot.y = i.y;
      }
    }), this.allNodes.forEach((n) => {
      if (n.lot.subling.level > 1) {
        const i = n.lot.parent.lot.strength_plus - n.lot.parent.lot.strength, l = (n.lot.parent.lot.strength_plus - i) / (n.lot.parent.lot.childs_size + 1) * (n.lot.index_of_parent + 1), c = x.getOvalPoint(o.lot.x, o.lot.y, (n.lot.subling.level - 1) * 80 + e, i + l, n.lot.parent.lot.subling.all_strength);
        n.lot.x = c.x, n.lot.y = c.y;
      }
    });
  }
  autoLayout(o) {
    if (o && (this.layoutTimes = 0), f("this.layoutTimes:", this.layoutTimes), this.layoutTimes > this.maxLayoutTimes) {
      this.graphOptions.autoLayouting = !1;
      return;
    }
    if (this.graphOptions.autoLayouting = !0, this.layoutTimes++, this.__origin_nodes.forEach((e) => {
      e.Fx = 0, e.Fy = 0;
    }), this.byNode)
      for (const e in this.__origin_nodes) {
        const n = this.__origin_nodes[e];
        if (!(this.justLayoutSingleNode && !n.singleNode) && n.lot.placed === !0)
          for (const i in this.__origin_nodes) {
            const s = this.__origin_nodes[i];
            s.lot.placed === !0 && e !== i && this.addGravityByNode(n, s);
          }
      }
    if (this.byLine)
      for (const e in this.__origin_nodes)
        this.__origin_nodes[e].lot.parent && this.addElasticByLine(this.__origin_nodes[e].lot.parent, this.__origin_nodes[e]);
    for (const e in this.__origin_nodes)
      this.applyToNodePosition(this.__origin_nodes[e]);
    window.setTimeout(() => {
      this.autoLayout();
    }, 30);
  }
  stop() {
    this.layoutTimes = 1e3;
  }
  addElasticByLine(o, e) {
    let n = Math.sqrt(Math.pow(o.y - e.y, 2) + Math.pow(o.x - e.x, 2));
    n > 1e3 && (n = 1e3);
    const i = n < 30 ? 0 : (n - 30) * 0.05, s = i, l = i, c = (o.x - e.x) / n, a = (o.y - e.y) / n;
    this.addFtoNode(o, c * s * -1, a * s * -1, 1), this.addFtoNode(e, c * l, a * l, 1);
  }
  addGravityByNode(o, e) {
    const n = Math.sqrt(Math.pow(o.y - e.y, 2) + Math.pow(o.x - e.x, 2)), i = 300;
    let s = n > i ? 0 : (i - n) * 0.03;
    const l = (o.x - e.x) / n, c = (o.y - e.y) / n;
    this.addFtoNode(o, l * s, c * s, 0), this.addFtoNode(e, l * s * -1, c * s * -1, 0);
  }
  getNodeFWeight(o) {
    let e = o.lot.level;
    return e > 7 && (e = 7), e < 0 && (e = 0), (8 - e) / 8;
  }
  addFtoNode(o, e, n) {
    this.justLayoutSingleNode && !o.singleNode || isNaN(e) || isNaN(n) || (e = e / (o.lot.strength || 1), n = n / (o.lot.strength || 1), e > 50 && (e = 50), n > 50 && (n = 50), e < -50 && (e = -50), n < -50 && (n = -50), o.Fx += e, o.Fy += n);
  }
  applyToNodePosition(o) {
    const e = Math.round(o.Fx), n = Math.round(o.Fy);
    o.x = o.x + e, o.y = o.y + n, o.Fx = 0, o.Fy = 0;
  }
}
class mt {
  constructor(o, e) {
    p(this, "setting");
    p(this, "config");
    p(this, "rootNode", null);
    p(this, "allNodes", []);
    p(this, "__origin_nodes", []);
    this.config = o, this.setting = e;
  }
  refresh() {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  }
  placeNodes(o, e) {
    if (e)
      f("layout by root:", e);
    else {
      f("root is null:", e);
      return;
    }
    this.__origin_nodes = o, this.rootNode = e, o.forEach((i) => {
      i.lot.eached = !1, i.lot.notLeafNode = !1, i.lot.childs = [], i.lot.index_of_parent = 0, i.lot.strength = 0, i.lot.prevNode = void 0, i.lot.nextNode = void 0, i.lot.placed = !1;
    }), this.allNodes = [];
    const n = {
      max_deep: 1,
      max_length: 1
    };
    x.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, n, 0), f("[layout canvasOffset]", this.setting.viewSize, this.setting.canvasSize);
  }
}
const gt = (t, o) => {
  o.layoutClassName = t.layoutClassName, o.layoutLabel = t.label, o.layoutName = t.layoutName, o.layoutDirection = t.layoutDirection, t.useLayoutStyleOptions === !0 && (o.defaultExpandHolderPosition = t.defaultExpandHolderPosition, o.defaultJunctionPoint = t.defaultJunctionPoint, o.defaultNodeColor = t.defaultNodeColor, o.defaultNodeFontColor = t.defaultNodeFontColor, o.defaultNodeBorderColor = t.defaultNodeBorderColor, o.defaultNodeBorderWidth = t.defaultNodeBorderWidth, o.defaultLineColor = t.defaultLineColor, o.defaultLineWidth = t.defaultLineWidth, o.defaultLineShape = t.defaultLineShape, o.defaultNodeShape = t.defaultNodeShape, o.defaultNodeWidth = t.defaultNodeWidth, o.defaultNodeHeight = t.defaultNodeHeight, o.defaultLineMarker = t.defaultLineMarker, o.defaultShowLineLabel = t.defaultShowLineLabel);
  let e = null;
  return t.layoutName === "SeeksBidirectionalTreeLayouter" || t.layoutName === "tree" ? e = new ut(t, o) : t.layoutName === "SeeksCenterLayouter" || t.layoutName === "center" ? e = new pt(t, o) : t.layoutName === "SeeksCircleLayouter" || t.layoutName === "circle" ? e = new _t(t, o) : t.layoutName === "SeeksForceLayouter" || t.layoutName === "force" ? e = new J(t, o) : (t.layoutName === "SeeksFixedLayouter" || t.layoutName === "fixed") && (e = new mt(t, o)), o.isNeedShowAutoLayoutButton = t.allowAutoLayoutIfSupport !== !1 && e.autoLayout !== void 0, e;
}, Me = (t, o) => {
  const e = o.layouter ? o.layouter.__origin_nodes : [], n = o.layouter ? o.layouter.rootNode : null;
  if (typeof t == "string") {
    for (const i in o.layouts)
      if (i.label === t) {
        t = i;
        break;
      }
  }
  f("[change layout]switchLayout"), o.layouter = gt(t, o), o.layouter.__origin_nodes = e, o.layouter.rootNode = n;
};
var Ge = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("div", { staticClass: "c-mini-toolbar", style: { "margin-left": t.relationGraph.options.viewELSize.width - 50 + "px", "margin-top": (t.relationGraph.options.viewELSize.height - 260) / 2 + "px" } }, [e("div", { staticClass: "c-mb-button", staticStyle: { "margin-top": "0px" }, on: { click: function(n) {
    return t.relationGraph.fullscreen();
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-resize-" } })]), e("span", { staticClass: "c-mb-text" }, [t._v(t._s(t.relationGraph.options.fullscreen ? "\u9000\u51FA" : "\u5168\u5C4F"))])]), t.relationGraph.options.allowShowZoomMenu ? e("div", { staticClass: "c-mb-button", on: { click: function(n) {
    return t.relationGraph.zoom(20);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-fangda" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u653E\u5927")])]) : t._e(), t.relationGraph.options.allowShowZoomMenu ? e("div", { staticStyle: { float: "left", "margin-top": "0px", height: "20px", width: "40px", "border-top": "0px", "border-bottom": "0px", "background-color": "#efefef", color: "#262626", "font-size": "10px", "text-align": "center", "line-height": "20px" }, on: { click: t.printGraphJsonData } }, [t._v(t._s(t.relationGraph.options.canvasZoom) + "%")]) : t._e(), t.relationGraph.options.allowShowZoomMenu ? e("div", { staticClass: "c-mb-button", staticStyle: { "margin-top": "0px" }, on: { click: function(n) {
    return t.relationGraph.zoom(-20);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-suoxiao" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u7F29\u5C0F")])]) : t._e(), t.relationGraph.options.layouts.length > 1 ? e("div", { staticClass: "c-mb-button" }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-yuanquanfenxiang" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u5E03\u5C40")]), e("div", { staticClass: "c-mb-child-panel", style: { width: t.relationGraph.options.layouts.length * 70 + 6 + "px", "margin-left": t.relationGraph.options.layouts.length * -70 - 5 + "px" } }, t._l(t.relationGraph.options.layouts, function(n) {
    return e("div", { key: n.label, staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.layoutLabel === n.label }, staticStyle: { width: "70px" }, on: { click: function(i) {
      return t.switchLayout(n);
    } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-yuanquanfenxiang" } })]), e("span", { staticClass: "c-mb-text" }, [t._v(t._s(n.label))])]);
  }), 0)]) : t._e(), t.relationGraph.options.allowSwitchLineShape ? e("div", { staticClass: "c-mb-button" }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-hj2" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u7EBF\u6761")]), e("div", { staticClass: "c-mb-child-panel", staticStyle: { width: "256px", "margin-left": "-255px" } }, [e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultLineShape === 1 }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultLineShape(1);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-hj2" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u76F4\u7EBF")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultLineShape === 2 }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultLineShape(2);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjieliu" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u7B80\u6D01")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultLineShape === 6 }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultLineShape(6);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjieliu" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u751F\u52A8")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultLineShape === 5 }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultLineShape(5);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjieliu" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u9C7C\u5C3E")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultLineShape === 4 }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultLineShape(4);
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-hj2" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u6298\u7EBF")])])])]) : t._e(), t.relationGraph.options.allowSwitchJunctionPoint ? e("div", { staticClass: "c-mb-button" }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjie_connecting5" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u8FDE\u63A5\u70B9")]), e("div", { staticClass: "c-mb-child-panel", staticStyle: { width: "206px", "margin-left": "-205px" } }, [e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultJunctionPoint === "border" }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultJunctionPoint("border");
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjie_connecting5" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u8FB9\u7F18")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultJunctionPoint === "ltrb" }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultJunctionPoint("ltrb");
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjie_connecting5" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u56DB\u70B9")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultJunctionPoint === "tb" }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultJunctionPoint("tb");
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjie_connecting5" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u4E0A\u4E0B")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", class: { "c-mb-button-on": t.relationGraph.options.defaultJunctionPoint === "lr" }, staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.setDefaultJunctionPoint("lr");
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjie_connecting5" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u5DE6\u53F3")])])])]) : t._e(), t.relationGraph.options.allowAutoLayoutIfSupport && t.relationGraph.options.isNeedShowAutoLayoutButton ? e("div", { staticClass: "c-mb-button", class: { "c-mb-button-on": t.relationGraph.options.autoLayouting }, attrs: { title: t.relationGraph.options.autoLayouting ? "\u70B9\u51FB\u505C\u6B62\u81EA\u52A8\u5E03\u5C40" : "\u70B9\u51FB\u5F00\u59CB\u81EA\u52A8\u8C03\u6574\u5E03\u5C40" }, on: { click: t.toggleAutoLayout } }, [t.relationGraph.options.autoLayouting ? e("svg", { staticClass: "c-loading-icon rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-lianjiezhong" } })]) : e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-zidong" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u81EA\u52A8")])]) : t._e(), t.relationGraph.options.allowShowRefreshButton ? e("div", { staticClass: "c-mb-button", on: { click: t.refresh } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-ico_reset" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u5237\u65B0")])]) : t._e(), t.relationGraph.options.allowShowDownloadButton ? e("div", { staticClass: "c-mb-button" }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-ziyuan" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("\u4E0B\u8F7D")]), e("div", { staticClass: "c-mb-child-panel", style: { width: t.downloadPanelWidth + "px", "margin-left": t.downloadPanelWidth * -1 + "px" } }, [e("div", { staticClass: "c-mb-button c-mb-button-c", staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.downloadAsImage("png");
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-tupian" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("PNG")])]), e("div", { staticClass: "c-mb-button c-mb-button-c", staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.relationGraph.downloadAsImage("jpg");
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-tupian" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("JPG")])]), t.relationGraph.listeners.onDownloadExcel ? e("div", { staticClass: "c-mb-button c-mb-button-c", staticStyle: { width: "50px" }, on: { click: function(n) {
    return t.onDownloadExcel();
  } } }, [e("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [e("use", { attrs: { "xlink:href": "#icon-ziyuan" } })]), e("span", { staticClass: "c-mb-text" }, [t._v("Excel")])]) : t._e()])]) : t._e()]);
}, Se = [];
const Pe = {
  name: "GraphMiniToolBar",
  props: {
    relationGraph: {
      mustUseProp: !0,
      default: () => ({}),
      type: Object
    }
  },
  data() {
    return {
      height: 275,
      hits: 0,
      downloadPanelWidth: 106
    };
  },
  mounted() {
    this.relationGraph.listeners.onDownloadExcel !== null && (this.downloadPanelWidth += 50), this.relationGraph.options.layouts.length > 1 && (this.height -= 40);
  },
  methods: {
    refresh() {
      this.relationGraph.refresh();
    },
    switchLayout(t) {
      f("change layout:", t), Me(t, this.relationGraph.options), this.refresh();
    },
    toggleAutoLayout() {
      this.relationGraph.startAutoLayout();
    },
    onDownloadExcel() {
      this.relationGraph.listeners.onDownloadExcel();
    },
    printGraphJsonData() {
      this.hits++, setTimeout(() => {
        this.hits > 0 && this.hits--;
      }, 2e3), this.hits > 5 && (this.hits = 0, this.relationGraph.printGraphJsonData());
    }
  }
}, ct = {};
var Le = /* @__PURE__ */ E(
  Pe,
  Ge,
  Se,
  !1,
  ze,
  "77714382",
  null,
  null
);
function ze(t) {
  for (let o in ct)
    this[o] = ct[o];
}
const Ne = /* @__PURE__ */ function() {
  return Le.exports;
}(), U = (t) => {
  if (t.from === void 0)
    throw Error("error,line must has option[from]:", t);
  if (t.to === void 0)
    throw Error("error,line must has option[to]:", t);
  if (typeof t.from != "string")
    throw Error("error line from, must be string:", t);
  if (typeof t.to != "string")
    throw Error("error line to, must be string:", t);
  const o = {
    from: t.from,
    to: t.to,
    text: t.text !== void 0 ? t.text : "",
    color: t.color !== void 0 ? t.color : void 0,
    fontColor: t.fontColor !== void 0 ? t.fontColor : void 0,
    lineWidth: t.lineWidth !== void 0 ? t.lineWidth : void 0,
    lineShape: t.lineShape !== void 0 ? t.lineShape : void 0,
    styleClass: t.styleClass !== void 0 ? t.styleClass : void 0,
    isHide: t.isHide !== void 0 ? t.isHide : !1,
    arrow: t.arrow !== void 0 ? t.arrow : void 0,
    disableDefaultClickEffect: t.disableDefaultClickEffect !== void 0 ? t.disableDefaultClickEffect : !1,
    showStartArrow: t.showStartArrow !== void 0 ? t.showStartArrow : !1,
    showEndArrow: t.showEndArrow !== void 0 ? t.showEndArrow : !0,
    useTextPath: t.useTextPath !== void 0 ? t.useTextPath : !1,
    isHideArrow: t.isHideArrow !== void 0 ? t.isHideArrow : void 0,
    hidden: t.hidden !== void 0 ? t.hidden : !1,
    lineDirection: t.lineDirection !== void 0 ? t.lineDirection : void 0,
    reverseText: t.reverseText !== void 0 ? t.reverseText : void 0,
    data: t.data !== void 0 ? t.data : {}
  };
  return o.isHideArrow && (o.showEndArrow = !1, o.isHideArrow = !1), o;
}, Ee = ["arrow", "id", "reverseText", "isReverse"], Y = (t, o) => {
  !t || t.relations.forEach((e) => {
    const n = {};
    Object.keys(e).forEach((i) => {
      Ee.indexOf(i) === -1 && e[i] !== void 0 && (n[i] = e[i]);
    }), o.push(n);
  });
}, W = {
  border: "border",
  ltrb: "ltrb",
  tb: "tb",
  lr: "lr"
}, Oe = {
  json2Line: U,
  transLinkToJson: Y
}, Be = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  json2Line: U,
  transLinkToJson: Y,
  JUNCTION_POINT_STYLE: W,
  default: Oe
}, Symbol.toStringTag, { value: "Module" })), xt = (t) => {
  const o = {
    instanceId: "SeeksGraph",
    debug: !0,
    showDebugPanel: !1,
    backgrounImage: "",
    downloadImageFileName: "",
    disableZoom: !1,
    disableDragNode: !1,
    moveToCenterWhenRefresh: !1,
    zoomToFitWhenRefresh: !0,
    useAnimationWhenRefresh: !0,
    defaultFocusRootNode: !0,
    disableNodeClickEffect: !1,
    disableLineClickEffect: !1,
    allowShowZoomMenu: !0,
    allowAutoLayoutIfSupport: !0,
    allowShowRefreshButton: !0,
    allowShowDownloadButton: !0,
    backgrounImageNoRepeat: !1,
    allowShowMiniToolBar: !0,
    allowSwitchLineShape: !1,
    allowSwitchJunctionPoint: !1,
    isMoveByParentNode: !1,
    defaultExpandHolderPosition: "hide",
    defaultNodeColor: "#67C23A",
    checkedLineColor: "#FD8B37",
    defaultNodeFontColor: "#ffffff",
    defaultNodeBorderColor: "#90EE90",
    defaultNodeBorderWidth: 5,
    defaultLineColor: "#dddddd",
    defaultLineWidth: 1,
    defaultLineShape: 1,
    defaultNodeShape: 0,
    defaultNodeWidth: void 0,
    defaultNodeHeight: void 0,
    defaultShowLineLabel: !0,
    hideNodeContentByZoom: !1,
    defaultJunctionPoint: "border",
    disableDragCanvas: !1,
    lineUseTextPath: !1,
    viewSize: { width: 300, height: 300 },
    viewELSize: { width: 1300, height: 800, left: 0, top: 100 },
    viewNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
    canvasNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
    defaultLineMarker: {
      markerWidth: 12,
      markerHeight: 12,
      refX: 6,
      refY: 6,
      color: void 0,
      data: "M2,2 L10,6 L2,10 L6,6 L2,2"
    },
    allowShowMiniView: !1,
    allowShowSettingPanel: !1,
    allowShowMiniNameFilter: !0,
    fullscreen: !1,
    checkedNodeId: "",
    checkedLineId: "",
    layouts: [],
    layoutLabel: "",
    layoutName: "tree",
    layoutClassName: "",
    layoutDirection: "h",
    autoLayouting: !1,
    layouter: void 0,
    isNeedShowAutoLayoutButton: !1,
    canvasZoom: 100,
    showSingleNode: !0,
    showNodeLabel: !0,
    showNodeShortLabel: !0,
    canvasSize: {
      width: 2e3,
      height: 2e3
    },
    canvasOffset: {
      x: 25,
      y: 27,
      zoom_buff_x: 0,
      zoom_buff_y: 0
    }
  }, e = t.debug === !0;
  return e && f("RGOptions:user instance graphSetting:", t), window && (window.relationGraphDebug = e), t && Object.keys(t).forEach((n) => {
    const i = t[n];
    if (typeof i == "object") {
      f("RGOptions:user setting object:", n, i);
      const s = o[n];
      if (s)
        if (s && !Array.isArray(s) && i)
          Object.keys(s).forEach((l) => {
            s[l] = i[l];
          });
        else if (Array.isArray(s)) {
          const l = [];
          i.forEach((c) => {
            c && typeof c == "object" ? l.push(JSON.parse(JSON.stringify(c))) : l.push(c);
          }), o[n] = l;
        } else
          o[n] = i;
      else
        f("ignore option:", n);
    } else
      o[n] = i;
  }), (!o.layouts || o.layouts.length === 0) && (o.layouts = [{
    label: "\u4E2D\u5FC3",
    layoutName: "center",
    layoutDirection: "v",
    defaultExpandHolderPosition: "hide",
    defaultNodeShape: 0,
    defaultLineShape: 1,
    defaultJunctionPoint: "border"
  }]), Array.isArray(o.layouts) || (o.layouts = [o.layouts]), o.layouts.forEach((n) => {
    yt(n, o);
  }), o;
}, yt = (t, o) => {
  t.useLayoutStyleOptions === void 0 && (t.useLayoutStyleOptions = !1), t.defaultNodeColor === void 0 && (t.defaultNodeColor = "#FFC5A6"), t.defaultNodeFontColor === void 0 && (t.defaultNodeFontColor = "#000000"), t.defaultNodeBorderColor === void 0 && (t.defaultNodeBorderColor = "#efefef"), t.defaultNodeBorderWidth === void 0 && (t.defaultNodeBorderWidth = 1), t.defaultLineColor === void 0 && (t.defaultLineColor = "#FD8B37"), t.defaultLineWidth === void 0 && (t.defaultLineWidth = 1), t.defaultNodeWidth === void 0 && (t.defaultNodeWidth = void 0), t.defaultNodeHeight === void 0 && (t.defaultNodeHeight = void 0), t.defaultShowLineLabel === void 0 && (t.defaultShowLineLabel = !0), t.defaultExpandHolderPosition === void 0 && (t.defaultExpandHolderPosition = void 0), t.defaultJunctionPoint === void 0 && (t.defaultJunctionPoint = void 0), t.defaultLineMarker === void 0 && (t.defaultLineMarker = {
    markerWidth: 12,
    markerHeight: 12,
    refX: 6,
    refY: 6,
    color: void 0,
    data: "M2,2 L10,6 L2,10 L6,6 L2,2"
  }), t.layoutName === "SeeksCenterLayouter" || t.layoutName === "center" ? (t.label === void 0 && (t.label = "\u4E2D\u5FC3"), t.layoutClassName === void 0 && (t.layoutClassName = "seeks-layout-" + t.layoutName), t.defaultNodeShape === void 0 && (t.defaultNodeShape = 0), t.defaultLineShape === void 0 && (t.defaultLineShape = 1), t.defaultExpandHolderPosition === void 0 && (t.defaultExpandHolderPosition = "hide"), t.defaultJunctionPoint === void 0 && (t.defaultJunctionPoint = "border"), t.layoutDirection === void 0 && (t.layoutDirection = "h"), t.centerOffset_x === void 0 && (t.centerOffset_x = 0), t.centerOffset_y === void 0 && (t.centerOffset_y = 0), t.levelDistance === void 0 && (t.levelDistance = ""), t.min_per_width === void 0 && (t.min_per_width = 30), t.max_per_width === void 0 && (t.max_per_width = 200), t.min_per_height === void 0 && (t.min_per_height = 100), t.max_per_height === void 0 && (t.max_per_height = 500)) : t.layoutName === "SeeksBidirectionalTreeLayouter" || t.layoutName === "tree" ? (t.label === void 0 && (t.label = "\u6811\u72B6"), t.layoutClassName === void 0 && (t.layoutClassName = "seeks-layout-" + t.layoutName), t.defaultNodeShape === void 0 && (t.defaultNodeShape = 1), t.defaultLineShape === void 0 && (o.defaultLineShape = 4), t.defaultExpandHolderPosition === void 0 && (t.defaultExpandHolderPosition = "hide"), t.defaultJunctionPoint === void 0 && (t.defaultJunctionPoint = "ltrb"), t.layoutDirection === void 0 && (t.layoutDirection = "h"), t.centerOffset_x === void 0 && (t.centerOffset_x = 0), t.centerOffset_y === void 0 && (t.centerOffset_y = 0), t.from === void 0 && (t.from = "top"), t.levelDistance === void 0 && (t.levelDistance = ""), t.min_per_width === void 0 && (t.min_per_width = 30), t.max_per_width === void 0 && (t.max_per_width = 200), t.min_per_height === void 0 && (t.min_per_height = 100), t.max_per_height === void 0 && (t.max_per_height = 500), (t.from === "top" || t.from === "bottom") && (t.layoutDirection = "v", o.defaultJunctionPoint = "tb", f("set layoutDirection=v"), f("set defaultJunctionPoint=tb")), (t.from === "left" || t.from === "right") && (o.defaultJunctionPoint = "lr", f("set defaultJunctionPoint=lr"))) : (t.layoutName === "fixed" || t.layoutName === "force") && (o.moveToCenterWhenRefresh = !1, o.zoomToFitWhenRefresh = !1);
};
let Ae = 0;
class X {
  constructor(o) {
    const e = xt(o);
    f("RGOptions:new RGOptions:by:", o), f("RGOptions:new RGOptions:by:", this), Object.assign(this, e), this.instanceId = "RGIns-" + Ae++;
  }
}
const He = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createDefaultConfig: xt,
  appendDefaultOptions4Layout: yt,
  default: X
}, Symbol.toStringTag, { value: "Module" })), q = (t) => {
  if (t.id === void 0)
    throw Error("node must has option[id]:", t);
  t.text = t.text || t.name;
  const o = {
    id: t.id,
    text: t.text !== void 0 ? t.text : "",
    type: t.type !== void 0 ? t.type : "node",
    isShow: t.isShow !== void 0 ? t.isShow : !0,
    isHide: t.isHide !== void 0 ? t.isHide : !1,
    expanded: t.expanded !== void 0 ? t.expanded : !0,
    junctionPoint: t.junctionPoint !== void 0 ? t.junctionPoint : void 0,
    selected: t.selected !== void 0 ? t.selected : !1,
    styleClass: t.styleClass !== void 0 ? t.styleClass : "",
    targetNodes: t.targetNodes !== void 0 ? t.targetNodes : [],
    targetFrom: t.targetFrom !== void 0 ? t.targetFrom : [],
    targetTo: t.targetTo !== void 0 ? t.targetTo : [],
    nodeShape: t.nodeShape !== void 0 ? t.nodeShape : void 0,
    borderWidth: t.borderWidth !== void 0 ? t.borderWidth : void 0,
    borderColor: t.borderColor !== void 0 ? t.borderColor : void 0,
    fontColor: t.fontColor !== void 0 ? t.fontColor : void 0,
    color: t.color !== void 0 ? t.color : void 0,
    opacity: t.opacity !== void 0 ? t.opacity : 1,
    fixed: t.fixed !== void 0 ? t.fixed : !1,
    width: t.width !== void 0 ? t.width : void 0,
    height: t.height !== void 0 ? t.height : void 0,
    x: t.x !== void 0 ? t.x : 0,
    y: t.y !== void 0 ? t.y : 0,
    Fx: t.Fx !== void 0 ? t.Fx : 0,
    Fy: t.Fy !== void 0 ? t.Fy : 0,
    offset_x: t.offset_x !== void 0 ? t.offset_x : 0,
    offset_y: t.offset_y !== void 0 ? t.offset_y : 0,
    expandHolderPosition: t.expandHolderPosition !== void 0 ? t.expandHolderPosition : void 0,
    innerHTML: t.innerHTML !== void 0 ? t.innerHTML : void 0,
    html: t.html !== void 0 ? t.html : void 0,
    disableDefaultClickEffect: t.disableDefaultClickEffect !== void 0 ? t.disableDefaultClickEffect : void 0,
    disableDrag: t.disableDrag !== void 0 ? t.disableDrag : !1,
    singleNode: !1,
    data: t.data !== void 0 ? t.data : {}
  };
  return o.lot === void 0 && (o.lot = {
    childs: [],
    parent: void 0,
    eached: !1,
    strength: 0
  }), o.lot.childs === void 0 && (o.lot.childs = []), o.lot.parent === void 0 && (o.lot.parent = void 0), o.lot.eached === void 0 && (o.lot.eached = !1), o.lot.strength === void 0 && (o.lot.strength = 0), o.el === void 0 && (o.el = { offsetWidth: 50, offsetHeight: 50 }), o.width !== void 0 && (o.el.offsetWidth = o.width), o.height !== void 0 && (o.el.offsetHeight = o.height), o;
}, Re = [
  "Fx",
  "Fy",
  "appended",
  "el",
  "targetFrom",
  "targetNodes",
  "targetTo",
  "type",
  "lot",
  "seeks_id"
], K = (t) => {
  if (!t)
    return;
  const o = {};
  return Object.keys(t).forEach((e) => {
    Re.indexOf(e) === -1 && t[e] !== void 0 && (o[e] = t[e]);
  }), o;
}, Ie = {
  json2Node: q,
  transNodeToJson: K
}, We = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  json2Node: q,
  transNodeToJson: K,
  default: Ie
}, Symbol.toStringTag, { value: "Module" }));
class Fe {
  constructor(o, e) {
    p(this, "instanceId", "");
    p(this, "options");
    p(this, "listeners");
    this.listeners = e, this.options = new X(o), this.instanceId = this.options.instanceId, f("new RelationGraph:", this);
  }
  enableDebugLog(o) {
    this.options.debug = o, window && (window.relationGraphDebug = o);
  }
}
class Ve extends Fe {
  constructor() {
    super(...arguments);
    p(this, "graphData", {
      nodes: [],
      lines: []
    });
    p(this, "tmpData", {
      nodes: [],
      lines: []
    });
    p(this, "seeksNodeIdIndex", 0);
    p(this, "allLineColors", []);
    p(this, "userLayouerClass", null);
  }
  ready() {
    this.initLayouter(), this.resetViewSize(), this.refreshNVAnalysisInfo();
  }
  setOptions(e, n) {
    this.options = new X(e), this.initLayouter(), this.resetViewSize(), this.doLayout(), this.resetViewSize(), n && n(this);
  }
  setLayouter(e) {
    f("setLayouterClass::", e), this.userLayouerClass = e;
  }
  initLayouter() {
    if (this.userLayouerClass)
      f("Use user layouter:", this.userLayouerClass), this.options.layouter = this.userLayouerClass;
    else if (this.options.layouts && this.options.layouts.length > 0) {
      const e = this.options.layouts[0];
      f("[change layout]Create default layouter\uFF1A", this.options.layoutName), e.layouter ? this.options.layouter = e.layouter : this.options.layouter = gt(e, this.options);
    } else
      f("\u4F60\u9700\u8981\u8BBE\u7F6Elayouts\u6765\u6307\u5B9A\u5F53\u524D\u56FE\u8C31\u53EF\u4EE5\u4F7F\u7528\u7684\u5E03\u5C40\u5668\uFF01");
    f("Layouter instance:", this.options.layouter);
  }
  setJsonData(e, n, i) {
    arguments.length === 2 && typeof n == "function" && (i = n, n = !0), this.nodeViewList = [], this.lineViewList = [], this.graphData.nodes = [], this.graphData.links = [], this.tmpData.nodes_map = {}, this.tmpData.lines_map = {}, this.graphData.rootNode = null, f("set jsonData:", e);
    const s = e.rootId;
    this.loadGraphJsonData(e), s && (this.graphData.rootNode = this.tmpData.nodes_map[s]), !this.graphData.rootNode && this.graphData.nodes.length > 0 && (this.graphData.rootNode = this.graphData.nodes[0]), this.applyNewDataToCanvas(), n && (f("resetViewSize:", n), this.resetViewSize()), setTimeout(() => {
      this.doLayout(), i && i(this);
    }, 500);
  }
  applyNewDataToCanvas() {
    if (this.graphData.nodes.forEach((e) => {
      e.appended === !1 && (e.appended = !0, this.nodeViewList.push(e));
    }), this.graphData.links.forEach((e) => {
      e.appended === !1 && (e.appended = !0, this.lineViewList.push(e));
    }), this.graphData.rootNode)
      this.options.defaultFocusRootNode && this.setCheckedNode(this.graphData.rootNode.id);
    else
      throw Error("\u6CA1\u6709\u8BBE\u7F6E\u6839\u8282\u70B9[rootId]\uFF01\u4E5F\u65E0\u6CD5\u83B7\u53D6\u6839\u8282\u70B9!");
  }
  appendJsonData(e, n, i) {
    arguments.length === 2 && typeof n == "function" && (i = n, n = !0), f("appendData:", e), this.loadGraphJsonData(e), this.applyNewDataToCanvas(), n && this.doLayout(), i && i(this);
  }
  loadNodes(e) {
    e.forEach((n) => {
      let i = q(n), s = !1;
      this.tmpData.nodes_map[i.id] ? i = this.tmpData.nodes_map[i.id] : s = !0, s && (this.tmpData.nodes_map[i.id] = i, this.graphData.nodes.push(i), i.seeks_id = this.seeksNodeIdIndex++, i.appended = !1);
    });
  }
  loadLines(e) {
    e.forEach((n) => {
      let i = !1, s, l;
      if (typeof n.from == "object" ? s = n.from : s = this.tmpData.nodes_map[n.from], typeof n.to == "object" ? l = n.to : l = this.tmpData.nodes_map[n.to], !s) {
        console.error("\u627E\u4E0D\u5230from:", n);
        return;
      }
      if (!l) {
        console.error("\u627E\u4E0D\u5230to:", n);
        return;
      }
      const c = s.seeks_id + "-" + l.seeks_id, a = l.seeks_id + "-" + s.seeks_id, r = U(n);
      let h, d = !1;
      this.tmpData.lines_map[c] ? h = this.tmpData.lines_map[c] : this.tmpData.lines_map[a] ? (h = this.tmpData.lines_map[a], d = !0) : (i = !0, h = {
        seeks_id: c,
        fromNode: s,
        toNode: l,
        appended: !1,
        relations: []
      });
      let u = r.arrow;
      r.isHideArrow || (u = this.getLineArrow(r.color)), s.targetNodes || (s.targetNodes = []), l.targetNodes || (l.targetNodes = []), s.targetNodes.indexOf(l) === -1 && s.targetNodes.push(l), l.targetNodes.indexOf(s) === -1 && l.targetNodes.push(s), s.targetTo.indexOf(l) === -1 && s.targetTo.push(l), l.targetFrom.indexOf(s) === -1 && l.targetFrom.push(s);
      let g = !1;
      for (let _ = 0; _ < h.relations.length; _++)
        if (h.relations[_].id === r.id) {
          g = !0;
          break;
        }
      g === !1 && (r.id || (r.id = h.seeks_id + "-" + h.relations.length), r.isReverse = d, r.arrow = u, r.textPositon = { x: 0, y: 0 }, h.relations.push(r)), i && (this.graphData.links.push(h), this.tmpData.lines_map[c] = h, h.appended = !1);
    });
  }
  flatNodeData(e, n, i, s) {
    e.forEach((l) => {
      i.push(l), n && s.push({
        from: n.id,
        to: l.id
      });
      const c = l.childs || l.children;
      c && c.length > 0 && this.flatNodeData(c, l, i, s);
    });
  }
  loadGraphJsonData(e, n) {
    e.lines || (e.lines = e.relations, console.warn("[relation-graph] For compatibility with older versionsm, Use jsonData.relations as jsonData.lines, It is recommended that you define your data using")), e.lines || (e.lines = e.links, console.warn("[relation-graph] For compatibility with older versionsm, Use jsonData.links as jsonData.lines, It is recommended that you define your data using"));
    const i = e.nodes, s = [], l = [];
    this.flatNodeData(i, null, s, l), e.lines.forEach((c) => {
      l.push(c);
    }), this.loadNodes(s), f("Nodes is initialized"), this.loadLines(l);
  }
  getLineArrow(e, n, i) {
    const s = n ? "start-" : "";
    if (i)
      return this.options.instanceId + "-" + s + "arrow-checked";
    if (e) {
      const l = N.getColorId(e);
      return this.allLineColors.map((c) => c.id).indexOf(l) === -1 && this.allLineColors.push({ id: l, color: e }), this.options.instanceId + "-" + s + "arrow-" + l;
    } else
      return this.options.instanceId + "-" + s + "arrow-default";
  }
  getNodes() {
    return this.graphData.nodes;
  }
  getLinks() {
    return this.graphData.links;
  }
  getGraphJsonData() {
    const e = [], n = [];
    return this.graphData.nodes.forEach((i) => {
      const s = K(i);
      s && e.push(s);
    }), this.graphData.links.forEach((i) => {
      Y(i, n);
    }), {
      rootId: this.graphData.rootNode ? this.graphData.rootNode.id : "",
      nodes: e,
      lines: n
    };
  }
  getGraphJsonOptions() {
    const e = {}, n = [
      "layouter",
      "autoLayouting",
      "canvasNVInfo",
      "canvasOffset",
      "canvasZoom",
      "fullscreen",
      "instanceId",
      "layoutClassName",
      "layoutDirection",
      "layoutLabel",
      "layoutName",
      "resetViewSize",
      "viewELSize",
      "viewNVInfo",
      "viewSize",
      "canvasSize"
    ];
    return Object.keys(this.options).forEach((i) => {
      n.indexOf(i) === -1 && (e[i] = this.options[i]);
    }), e;
  }
  printGraphJsonData() {
    f("graph options:", JSON.stringify(this.getGraphJsonOptions())), f("graph json data:", JSON.stringify(this.getGraphJsonData()));
  }
  getNodeById(e) {
    for (let n = 0; n < this.graphData.nodes.length; n++)
      if (this.graphData.nodes[n].id === e)
        return this.graphData.nodes[n];
  }
  addNodes(e, n) {
    this.loadNodes(e), n && this.doLayout();
  }
  addLines(e, n) {
    this.loadLines(e), n && this.doLayout();
  }
  removeNodeById(e) {
    let n = 0;
    for (let s = 0; s < this.graphData.links.length; s++) {
      const l = this.graphData.links[s];
      (l.fromNode.id === e || l.toNode.id === e) && (l.hidden = !0, this.graphData.links.splice(s, 1), s--, n++);
    }
    f("\u5220\u9664\u5BF9\u5E94\u7684\u7EBF\u4E2A\u6570\uFF1A", e, n);
    let i = 0;
    for (let s = 0; s < this.graphData.nodes.length; s++)
      if (this.graphData.nodes[s].id === e) {
        const l = this.graphData.nodes[s];
        l.targetNodes.forEach((c) => {
          const a = c.targetNodes.indexOf(l);
          a !== -1 && c.targetNodes.splice(a, 1);
        }), this.graphData.nodes.splice(s, 1), delete this.tmpData.nodes_map[l.id], i++;
        break;
      }
    f("\u5220\u9664\u5BF9\u5E94\u7684\u8282\u70B9\u4E2A\u6570\uFF1A", e, i);
  }
  removeLinkById(e, n) {
    for (let i = 0; i < this.graphData.links.length; i++) {
      const s = this.graphData.links[i];
      (s.fromNode.id === e || s.toNode.id === n) && (this.graphData.links.splice(i, 1), i--);
    }
  }
  focusRootNode() {
    f("relation-graph:focusRootNode"), this.handleSelect(this.graphData.rootNode);
  }
  setNodePosition(e, n, i) {
    e.x = n, e.y = i;
  }
  focusNodeById(e) {
    this.graphData.nodes.forEach((n) => {
      n.id === e && this.handleSelect(n);
    });
  }
  querySearchAsync(e, n) {
    if (f("fetch-suggestions", e), e = e.trim(), e === "")
      return;
    const i = [];
    this.graphData.nodes.forEach((s) => {
      f("fetch:", s.text), s.text.indexOf(e) !== -1 && i.push(s);
    }), f("fetched:", i.length), n(i);
  }
  handleSelect(e) {
    f("checked:", e), scrollTo({
      top: this.$dom.offsetTop
    }), this.animateToZoom(100, 300, () => {
      const n = e.width || 50, i = e.height || 50, s = e.x * -1 + this.options.viewSize.width / 2 - n / 2, l = e.y * -1 + this.options.viewSize.height / 2 - i / 2;
      this.animateGoto(s, l, 500, () => {
        this.options.checkedNodeId = e.id, this.refreshNVAnalysisInfo();
      });
    });
  }
}
class Te extends Ve {
  constructor() {
    super(...arguments);
    p(this, "$dom");
    p(this, "$canvasDom");
  }
  setDom(e) {
    this.$dom = e;
  }
  setCanvasDom(e) {
    this.$canvasDom = e;
  }
  fullscreen(e) {
    e === void 0 ? (this.options.fullscreen = !this.options.fullscreen, T.toggle(this.$dom).then(() => {
      setTimeout(() => {
        this.refreshNVAnalysisInfo();
      }, 1e3);
    })) : (this.options.fullscreen = e, setTimeout(() => {
      this.refreshNVAnalysisInfo();
    }, 1e3));
  }
}
class je extends Te {
  constructor() {
    super(...arguments);
    p(this, "zoomCenter_of_newSize", { x: 0, y: 0 });
  }
  zoom(e, n) {
    if (this.options.canvasZoom + e < 10)
      return;
    const i = this.options.canvasZoom + e, s = this.showZoomCenter(n, e);
    this.options.canvasOffset.x += s.buff_x, this.options.canvasOffset.y += s.buff_y, this.options.canvasZoom = i, this.refreshNVAnalysisInfo();
  }
  setZoom(e, n) {
    const i = Math.floor(e - this.options.canvasZoom);
    this.zoom(i);
  }
  showZoomCenter(e, n) {
    if (!this.$dom)
      return;
    const i = this.options.canvasZoom / 100, s = (this.options.canvasZoom + n) / 100;
    this.currentZoomSet = this.analysisByZoom(i, e), this.newZoomSet = this.analysisByZoom(s, e);
    const l = s / i, c = 0, a = 0, r = s / i, h = 0, d = 0;
    this.zoomCenter_of_newSize.x = l * this.currentZoomSet.NMViewBuff.x + a * this.currentZoomSet.NMViewBuff.y + h, this.zoomCenter_of_newSize.y = c * this.currentZoomSet.NMViewBuff.x + r * this.currentZoomSet.NMViewBuff.y + d;
    const u = this.currentZoomSet.NMViewBuff.x - this.zoomCenter_of_newSize.x, g = this.currentZoomSet.NMViewBuff.y - this.zoomCenter_of_newSize.y;
    this.zoomCenter_of_newSize.x += this.currentZoomSet.NMCanvasCenter.x, this.zoomCenter_of_newSize.y += this.currentZoomSet.NMCanvasCenter.y;
    let _ = this.currentZoomSet.NMCanvasStart.x - this.currentZoomSet.NMCanvasCenter.x, v = this.currentZoomSet.NMCanvasStart.y - this.currentZoomSet.NMCanvasCenter.y, b = l * _ + a * v + h, M = c * _ + r * v + d;
    return this.newZoomSet.NMCanvasStart.x = u + this.currentZoomSet.NMCanvasCenter.x + b, this.newZoomSet.NMCanvasStart.y = u + this.currentZoomSet.NMCanvasCenter.y + M, _ = this.currentZoomSet.NMCanvasEnd.x - this.currentZoomSet.NMCanvasCenter.x, v = this.currentZoomSet.NMCanvasEnd.y - this.currentZoomSet.NMCanvasCenter.y, b = l * _ + a * v + h, M = c * _ + r * v + d, this.newZoomSet.NMCanvasEnd.x = u + this.currentZoomSet.NMCanvasCenter.x + b, this.newZoomSet.NMCanvasEnd.y = u + this.currentZoomSet.NMCanvasCenter.y + M, this.currentZoomSet.NMCanvasOffsetBuff.x = u, this.currentZoomSet.NMCanvasOffsetBuff.y = g, {
      buff_x: u,
      buff_y: g
    };
  }
  analysisByZoom(e, n) {
    const i = {
      NMViewPosition: { x: 0, y: 0 },
      NMViewCenter: { x: 0, y: 0 },
      NMCanvasCenter: { x: 0, y: 0 },
      NMCanvasStart: { x: 0, y: 0 },
      NMCanvasEnd: { x: 0, y: 0 },
      NMZoomCenter: { x: 0, y: 0 },
      NMViewBuff: { x: 0, y: 0 },
      NMCanvasOffsetBuff: { x: 0, y: 0 },
      NMCanvasSize: { width: 0, height: 0 }
    }, s = Mt(), l = Gt(), c = this.$dom.getBoundingClientRect();
    i.NMViewPosition.x = c.left, i.NMViewPosition.y = c.top, c.width + i.NMViewPosition.x > s ? i.NMViewCenter.x = (s - c.left) / 2 : i.NMViewCenter.x = c.width / 2, c.height + i.NMViewPosition.y > l ? i.NMViewCenter.y = (l - c.top) / 2 : i.NMViewCenter.y = c.height / 2;
    const a = this.options.canvasSize.width * e, r = this.options.canvasSize.height * e;
    i.NMCanvasCenter.x = this.options.canvasOffset.x + this.options.canvasSize.width / 2, i.NMCanvasCenter.y = this.options.canvasOffset.y + this.options.canvasSize.height / 2, i.NMCanvasStart.x = i.NMCanvasCenter.x - a / 2, i.NMCanvasStart.y = i.NMCanvasCenter.y - r / 2, i.NMCanvasEnd.x = i.NMCanvasCenter.x + a / 2, i.NMCanvasEnd.y = i.NMCanvasCenter.y + r / 2, i.NMZoomCenter.x = i.NMViewCenter.x, i.NMZoomCenter.y = i.NMViewCenter.y, n && (i.NMZoomCenter.x = n.x - i.NMViewPosition.x, i.NMZoomCenter.y = n.y - i.NMViewPosition.y);
    let h = i.NMViewCenter.x - i.NMCanvasCenter.x, d = i.NMViewCenter.y - i.NMCanvasCenter.y;
    return n && (h = i.NMZoomCenter.x - i.NMCanvasCenter.x, d = i.NMZoomCenter.y - i.NMCanvasCenter.y), i.NMViewBuff.x = h, i.NMViewBuff.y = d, i.NMCanvasSize.width = a, i.NMCanvasSize.height = r, i;
  }
}
class $e extends je {
  constructor() {
    super(...arguments);
  }
  doLayout() {
    if (!this.options.layouter) {
      f("no layouter");
      return;
    }
    if (!this.graphData.rootNode) {
      f("Cant find rootNode!");
      return;
    }
    f("node size\uFF1A", this.graphData.nodes.length), this.options.layouter.placeNodes(this.graphData.nodes, this.graphData.rootNode, this.graphSetting);
  }
  refresh(o) {
    this.resetViewSize(), this.options.layouter.refresh(), this.playShowEffect(o);
  }
  resetViewSize() {
    !this.options || (f("resetViewSize"), this.options.viewSize.width = this.$dom.getBoundingClientRect().width, this.options.viewSize.height = this.$dom.getBoundingClientRect().height, this.options.canvasZoom = 100, this.options.canvasOffset.x = this.options.viewNVInfo.width / 2, this.options.canvasOffset.y = this.options.viewNVInfo.height / 2, this.refreshNVAnalysisInfo());
  }
  dataUpdated() {
    this.options.canvasOffset.x += 1, this.options.canvasOffset.y += 1, this.options.canvasOffset.x -= 1, this.options.canvasOffset.y -= 1;
  }
  refreshNVAnalysisInfo() {
    if (!this.$dom) {
      console.error("cannot get view size !");
      return;
    }
    const o = {
      NMCanvasCenter: { x: 0, y: 0 }
    }, e = this.$dom.getBoundingClientRect();
    this.options.viewNVInfo.x = e.left, this.options.viewNVInfo.y = e.top, this.options.viewNVInfo.width = e.width, this.options.viewNVInfo.height = e.height;
    const n = this.options.canvasSize.width * (this.options.canvasZoom / 100), i = this.options.canvasSize.height * (this.options.canvasZoom / 100);
    o.NMCanvasCenter.x = this.options.canvasOffset.x + this.options.canvasSize.width / 2, o.NMCanvasCenter.y = this.options.canvasOffset.y + this.options.canvasSize.height / 2, this.options.canvasNVInfo.x = o.NMCanvasCenter.x - n / 2, this.options.canvasNVInfo.y = o.NMCanvasCenter.y - i / 2, this.options.canvasNVInfo.width = n, this.options.canvasNVInfo.height = i, this.options.viewELSize.width = e.width, this.options.viewELSize.height = e.height, this.options.viewELSize.left = e.left, this.options.viewELSize.top = e.top;
  }
  getStuffSize() {
    let o = 9999999, e = 9999999, n = 0, i = 0;
    this.graphData.nodes.forEach((a) => {
      a.x < o && (o = a.x), a.x > n && (n = a.x + a.el.offsetWidth), a.y < e && (e = a.y), a.y > i && (i = a.y + a.el.offsetHeight);
    });
    const s = 100, l = n - o + s, c = i - e + s;
    return {
      width: l,
      height: c,
      minX: o,
      maxX: n,
      minY: e,
      maxY: i
    };
  }
  getNodesCenter() {
    const o = this.getStuffSize();
    f("getStuffSize:", o);
    const e = o.minX + (o.width - 100) / 2, n = o.minY + (o.height - 100) / 2;
    return {
      x: e,
      y: n
    };
  }
  setCanvasCenter(o, e) {
    const n = this.options.viewSize.width / 2, i = this.options.viewSize.height / 2;
    this.setCanvasOffset(n - o, i - e);
  }
  setCanvasOffset(o, e) {
    this.options.canvasOffset.x = o, this.options.canvasOffset.y = e;
  }
  playShowEffect(o) {
    if (this.graphData.nodes.length === 0) {
      f("relation-graph:move to center: data not ready!");
      return;
    }
    if (f("playShowEffect:", this.options.moveToCenterWhenRefresh, this.options.zoomToFitWhenRefresh), this.options.moveToCenterWhenRefresh)
      if (this.options.useAnimationWhenRefresh) {
        const e = this.getNodesCenter();
        f("center:", e.x, e.y);
        const n = this.options.viewSize.width / 2 - e.x, i = this.options.viewSize.height / 2 - e.y;
        this.animateGoto(n, i, 500, () => {
          this.zoomToFitWhenRefresh(o);
        });
      } else {
        const e = this.getNodesCenter();
        this.setCanvasCenter(e.x, e.y), this.zoomToFitWhenRefresh(o);
      }
    else
      this.zoomToFitWhenRefresh(o);
    if (isNaN(this.graphData.rootNode.x)) {
      f("rootNode.x is NaN, graph is currently hidden?");
      return;
    }
    this.options.layoutName !== "force" && this.placeSingleNode();
  }
  zoomToFitWhenRefresh(o) {
    this.options.zoomToFitWhenRefresh ? this.zoomToFit(o) : o && o();
  }
  placeSingleNode() {
    let o = 0;
    if (this.graphData.nodes.forEach((e) => {
      e.id !== this.graphData.rootNode.id && (isNaN(e.x) || e.x === 0) && (isNaN(e.y) || e.y === 0) && (e.x = Math.floor(Math.random() * 200) - 100, e.y = Math.floor(Math.random() * 200) - 100, e.singleNode = !0, e.lot.placed = !0, o++);
    }), o > 0) {
      f("sigle nodes:", o);
      const e = new J({}, {});
      e.__origin_nodes = this.graphData.nodes, e.justLayoutSingleNode = !0, e.byLine = !1, e.maxLayoutTimes = 100, e.autoLayout();
    }
  }
  zoomToFit(o) {
    const e = this.getStuffSize(), n = this.options.viewSize.width / e.width, i = this.options.viewSize.height / e.height, s = Math.min(n, i, 1);
    f("animateToZoom:", { stuffSize: e, zoomPercent: s, zoomPercentX: n, zoomPercentY: i, viewSize: this.options.viewSize }), this.options.useAnimationWhenRefresh ? this.animateToZoom(s * 100, 300, o) : (this.setZoom(s * 100, 300), o && o());
  }
  animateGoto(o, e, n, i) {
    f("animateGoto:", o, e);
    const s = o - this.options.canvasOffset.x, l = e - this.options.canvasOffset.y, c = n, a = 5, r = Math.round(s / a), h = Math.round(l / a), d = c / a;
    this.animateStepAction(0, d, a, () => {
      this.options.canvasOffset.x += r, this.options.canvasOffset.y += h;
    }, () => {
      i && i();
    });
  }
  animateToZoom(o, e, n) {
    const i = o - this.options.canvasZoom, s = e, l = 5, c = Math.round(i / l), a = s / l;
    f("animateToZoom:", i, c), this.animateStepAction(0, a, l, () => {
      this.zoom(c);
    }, () => {
      this.setZoom(o), n && n();
    });
  }
  animateStepAction(o, e, n, i, s) {
    o < n ? (i(o, n), setTimeout(() => {
      this.animateStepAction(o + 1, e, n, i, s);
    }, e)) : s();
  }
  startAutoLayout() {
    this.options.autoLayouting = !this.options.autoLayouting, this.options.autoLayouting ? this.options.layouter.autoLayout ? this.options.layouter.autoLayout(!0) : console.log("\u5F53\u524D\u5E03\u5C40\u4E0D\u652F\u6301\u81EA\u52A8\u5E03\u5C40\uFF01") : this.options.layouter.stop ? this.options.layouter.stop() : console.log("\u5F53\u524D\u5E03\u5C40\u4E0D\u652F\u6301\u81EA\u52A8\u5E03\u5C40stop\uFF01");
  }
  stopAutoLayout() {
    this.options.autoLayouting = !1, this.options.layouter.stop ? this.options.layouter.stop() : console.log("\u5F53\u524D\u5E03\u5C40\u4E0D\u652F\u6301\u81EA\u52A8\u5E03\u5C40stop\uFF01");
  }
}
class De extends $e {
  constructor() {
    super(...arguments);
  }
  setDefaultLineShape(o) {
    this.options.defaultLineShape = o;
  }
  setDefaultJunctionPoint(o) {
    this.options.defaultJunctionPoint = o;
  }
  setCheckedNode(o) {
    this.options.checkedNodeId = o;
  }
  setCheckedLine(o) {
    this.options.checkedLineId = o;
  }
  selectNode(o, e) {
    o.selected = e;
  }
  updateNodeOffsetSize(o, e, n) {
    o.el.offsetWidth = e, o.el.offsetHeight = n;
  }
  onNodeClick(o, e) {
    f("onNodeClick:", o), this.options.disableNodeClickEffect !== !0 && o.disableDefaultClickEffect !== !0 && this.setCheckedNode(o.id), this.listeners.onNodeClick && this.listeners.onNodeClick(o, e);
  }
  onLineClick(o, e, n) {
    f("onLineClick:", "line:", o, "link:", e), this.options.disableLineClickEffect !== !0 && o.disableDefaultClickEffect !== !0 && (this.setCheckedLine(e.seeks_id), this.selectNode(e.fromNode, !0), this.selectNode(e.toNode, !0), setTimeout(() => {
      this.selectNode(e.fromNode, !1), this.selectNode(e.toNode, !1);
    }, 2e3)), this.listeners.onLineClick && this.listeners.onLineClick(o, e, n);
  }
  expandOrCollapseNode(o, e) {
    o.expanded === !1 ? this.expandNode(o, e) : this.collapseNode(o, e);
  }
  expandNode(o, e) {
    f("onNodeExpand:", o), o.expanded = !0, o.lot.childs.forEach((n) => {
      n.isShow = !0;
    }), this.listeners.onNodeExpand && this.listeners.onNodeExpand(o, e);
  }
  collapseNode(o, e) {
    f("onNodeCollapse:", o), o.expanded = !1, o.lot.childs.forEach((n) => {
      n.isShow = !1;
    }), this.listeners.onNodeCollapse && this.listeners.onNodeCollapse(o, e);
  }
}
class Ze extends De {
  constructor() {
    super(...arguments);
  }
  dataURLToBlob(o) {
    const e = o.split(","), n = e[0].match(/:(.*?);/)[1], i = atob(e[1]);
    let s = i.length;
    const l = new Uint8Array(s);
    for (; s--; )
      l[s] = i.charCodeAt(s);
    return new Blob([l], { type: n });
  }
  downloadAsImage(o, e) {
    if (this.listeners.onImageDownload && this.listeners.onImageDownload(this.$canvasDom) === !1)
      return;
    if (this.graphData.nodes.length === 0)
      throw Error("\u6CA1\u6709\u8282\u70B9\uFF0C\u6CA1\u6709\u5185\u5BB9\u9700\u8981\u5BFC\u51FA\uFF01");
    o || (o = "png"), e || (e = this.options.downloadImageFileName), e || (e = "SeeksRelationGraph-" + (Math.random() * 1e5).toFixed(0)), this.options.checkedNodeId = "";
    const n = this.options.canvasZoom;
    this.options.canvasZoom = 100;
    const i = this.$canvasDom, s = i.clientWidth, l = i.clientHeight;
    let c = 999999, a = 999999, r = 0, h = 0;
    const d = 100;
    this.graphData.nodes.forEach((m) => {
      m.x < c && (c = m.x), m.x > r && (r = m.x + m.el.offsetWidth), m.y < a && (a = m.y), m.y > h && (h = m.y + m.el.offsetHeight);
    });
    const u = c - d, g = a - d;
    this.graphData.nodes.forEach((m) => {
      m.x = m.x - u, m.y = m.y - g;
    });
    const _ = this.options.canvasOffset.x, v = this.options.canvasOffset.y;
    this.options.canvasOffset.x = d * -1, this.options.canvasOffset.y = d * -1, f("offset:", { _origin_offset_x: _, _origin_offset_y: v, _min_x: c, _min_y: a, _max_x: r, _max_y: h });
    const b = r - c + 200 + d * 2, M = h - a + 100 + d * 2, k = window.devicePixelRatio;
    this.options.canvasSize.width = b * k, this.options.canvasSize.height = M * k;
    const C = {
      left: this.$dom.offsetLeft - i.getBoundingClientRect().left,
      top: this.$dom.offsetTop - i.getBoundingClientRect().top,
      canvas_offsetLeft: i.offsetLeft,
      canvas_offsetTop: i.offsetTop,
      canvas_left: i.getBoundingClientRect().left,
      canvas_top: i.getBoundingClientRect().top
    };
    window.scrollTo(0, 0), f("export image:", { relationGraphPosition: C, orign_width: s, orign_height: l, _image_width: b, _image_height: M, _min_x: c, _min_y: a, _max_x: r, _max_y: h, devicePixelRatio: window.devicePixelRatio });
    const S = document.createElement("canvas");
    S.width = b * k, S.height = M * k, S.style.backgroundColor = getComputedStyle(i.parentElement, null).backgroundColor, f("canvas.style.backgroundColor:", S.style.backgroundColor), S.style.width = b * k + "px", S.style.height = M * k + "px", S.getContext("2d").scale(1, 1);
    const G = {
      backgroundColor: S.style.backgroundColor,
      scale: k,
      canvas: S,
      logging: !0,
      width: b,
      height: M,
      useCORS: !0
    };
    setTimeout(() => {
      this.createImage(i, G, o, e, () => {
        this.options.canvasSize.width = s, this.options.canvasSize.height = l, this.options.canvasOffset.x = _, this.options.canvasOffset.y = v, this.options.canvasZoom = n, this.graphData.nodes.forEach((m) => {
          m.x = m.x + u, m.y = m.y + g;
        });
      });
    }, 1e3);
  }
  createImage(o, e, n, i, s) {
    f("html2canvas:", e, n, i), dt(o, e).then((l) => {
      const c = document.body.appendChild(l);
      c.style.display = "none";
      const a = this.dataURLToBlob(c.toDataURL("image/" + n));
      document.body.removeChild(c);
      const r = document.createElement("a");
      r.style.display = "none";
      try {
        window.navigator.msSaveOrOpenBlob ? window.navigator.msSaveOrOpenBlob(a, i + "." + n) : (r.setAttribute("href", URL.createObjectURL(a)), r.setAttribute("download", i + "." + n), document.body.appendChild(r), r.click(), f("click ok!"), URL.revokeObjectURL(a), f("revokeObjectURL ok!"), document.body.removeChild(r), f("removeChild ok!")), s && s();
      } catch (h) {
        f("[SEEKS Graph]Create and download image error:", h);
      }
    });
  }
}
class Je extends Ze {
  constructor() {
    super(...arguments);
  }
  createLinePath(o, e, n) {
    const i = o.fromNode, s = o.toNode;
    e || (e = 0);
    const l = n.lineShape === void 0 ? this.options.defaultLineShape : n.lineShape, c = n.lineDirection === void 0 ? this.options.layoutDirection : n.lineDirection;
    let a = i.x, r = i.y, h = s.x, d = s.y;
    if (isNaN(a) || isNaN(r))
      return f("error start node:", i), n.textPositon.x = 50, n.textPositon.y = 50, n.textPositon.rotate = 0, "M 0 0 L 100 100";
    if (isNaN(h) || isNaN(d))
      return f("error start point:", i), n.textPositon.x = 50, n.textPositon.y = 50, n.textPositon.rotate = 0, "M 0 0 L 100 100";
    let u = i.el.offsetWidth || i.width || i.w, g = i.el.offsetHeight || i.height || i.h;
    if (isNaN(u) || isNaN(g))
      return n.textPositon.x = 50, n.textPositon.y = 50, n.textPositon.rotate = 0, "M 0 0 L 100 100";
    let _ = s.el.offsetWidth || s.width || s.w, v = s.el.offsetHeight || s.height || s.h;
    if (isNaN(_) || isNaN(v))
      return n.textPositon.x = 50, n.textPositon.y = 50, n.textPositon.rotate = 0, "M 0 0 L 100 100";
    n.isReverse && ([a, r, h, d, u, g, _, v] = [h, d, a, r, _, v, u, g]);
    const b = [a, r, h, d, u, g, _, v, this.options.defaultNodeShape, n.isReverse, o.relations.length, e], M = [h, d, a, r, _, v, u, g, this.options.defaultNodeShape, !n.isReverse, o.relations.length, e];
    let k, C, S = this.options.defaultJunctionPoint;
    S || (S = W.border), S === W.border ? (k = x.getBorderPoint4MultiLine(...b), C = x.getBorderPoint4MultiLine(...M)) : S === W.ltrb ? (k = x.getRectJoinPoint(...b), C = x.getRectJoinPoint(...M)) : S === W.tb ? (k = x.getRectVJoinPoint(...b), C = x.getRectVJoinPoint(...M)) : S === W.lr && (k = x.getRectHJoinPoint(...b), C = x.getRectHJoinPoint(...M));
    const G = k.x, m = k.y, I = C.x, V = C.y;
    if (isNaN(G) || isNaN(m))
      return console.error("error start point:", i), n.textPositon.x = 50, n.textPositon.y = 50, n.textPositon.rotate = 0, "M 0 0 L 100 100";
    if (isNaN(I) || isNaN(V))
      return console.error("error end point:", s), n.textPositon.x = 50, n.textPositon.y = 50, n.textPositon.rotate = 0, "M 0 0 L 100 100";
    let w = C.x - k.x, y = C.y - k.y, P = C.x > k.x ? 1 : -1;
    c === "v" && (P = C.y > k.y ? 1 : -1);
    let z = "";
    if (l === 4) {
      const L = 60 / (o.relations.length + 1) * (e + 1) - 30;
      c === "v" ? (y = y - (P * 33 + L), n.textPositon.x = G + w + 5, n.textPositon.y = m + P * 40 + L, n.textPositon.rotate = 90, z = "M " + G + " " + m + " v" + (P * 33 + L) + " h" + (w + L) + " v" + y) : n.reverseText === !0 ? (n.textPositon.x = G + P * 10 - (P < 0 ? 30 : 0), n.textPositon.y = m - 5, w = w - P * 120, z = "M " + G + " " + m + " h" + P * 120 + " v" + y + " h" + w) : (n.textPositon.x = G + P * 50 - (P < 0 ? 30 : 0), n.textPositon.y = m + y - 5 + L, w = w - (P * 33 + L), y = y + P * L, z = "M " + G + " " + m + " h" + (P * 33 + L) + " v" + y + " h" + w);
    } else if (l === 2) {
      const L = C.y > k.y ? 1 : -1, O = Math.abs(w) + Math.abs(y);
      n.textPositon.x = Math.round(C.x - w / O * 60 - 20), n.textPositon.y = Math.round(C.y - y / O * 60 - 20 * L);
      const j = 1 / (o.relations.length + 1) * (e + 1) - 0.5 + 0.5;
      c === "v" ? z = "M" + G + "," + m + " c" + 0 + "," + P * 30 + " " + w * j + "," + P * -10 + " " + w + "," + y : z = "M" + G + "," + m + " c" + P * 30 + "," + 0 + " " + P * -10 + "," + y * j + " " + w + "," + y;
    } else if (l === 6) {
      const L = C.y > k.y ? 1 : -1, O = Math.abs(w) + Math.abs(y);
      n.textPositon.x = Math.round(C.x - w / O * 60 - 20), n.textPositon.y = Math.round(C.y - y / O * 60 - 20 * L), c === "v" ? z = "M" + G + "," + m + " c" + 0 + "," + y / 2 + " " + w + "," + y / 2 + " " + w + "," + y : z = "M" + G + "," + m + " c" + w / 2 + "," + 0 + " " + w / 2 + "," + y + " " + w + "," + y;
    } else if (l === 3) {
      n.textPositon.x = C.x - P * 63, n.textPositon.y = C.y + 3;
      const L = 1 / (o.relations.length + 1) * (e + 1) - 0.5 + 0.5;
      c === "v" ? z = "M" + G + "," + m + " c" + 0 + "," + y * L + " " + 0 + "," + 0 + " " + w + "," + y : z = "M" + G + "," + m + " c" + P * 30 + "," + 0 + " " + P * -10 + "," + y * L + " " + w + "," + y;
    } else if (l === 5) {
      n.textPositon.x = C.x - P * 63, n.textPositon.y = C.y + 3;
      const L = 1 / (o.relations.length + 1) * (e + 1) - 0.5 + 0.5;
      c === "v" ? z = "M" + G + "," + m + " c" + 0 + "," + 0 + " " + 0 + "," + y * L + " " + w + "," + y : z = "M" + G + "," + m + " c" + 0 + "," + 0 + " " + w * L + "," + 0 + " " + w + "," + y;
    } else {
      const L = x.getAngleType(w, y);
      n.textPositon.rotate = x.getTextAngle(G, m, I, V);
      const O = L === 2 || L === 4 ? -1 : 1, j = (y === 0 ? -50 : Math.sin(Math.atan(w / y)) * 10 / Math.sin(90)) * O, bt = w === 0 ? -50 : Math.sin(Math.atan(y / w)) * 10 / Math.sin(90);
      n.textPositon.x = Math.round(k.x + w / 2 - j), n.textPositon.y = Math.round(k.y + y / 2 - bt), isNaN(n.textPositon.rotate) && (n.textPositon.rotate = 0), z = "M " + G + " " + m + " L " + I + " " + V;
    }
    return z;
  }
  getTextTransform(o, e, n, i) {
    if (!e || !n)
      return "translate(0,0)";
    const s = o.lineShape === void 0 ? this.options.defaultLineShape : o.lineShape;
    return s === 1 || s === 4 ? "translate(" + e + "," + n + ")rotate(" + (i || 0) + ")" : "translate(" + e + "," + n + ")";
  }
  getArrow(o, e, n) {
    const i = e.seeks_id === this.options.checkedLineId;
    return o.isHideArrow ? "none" : "url('#" + this.getLineArrow(o.color, n, i) + "')";
  }
}
class vt extends Je {
  constructor() {
    super(...arguments);
  }
}
var Ue = function() {
  var t = this, o = t.$createElement, e = t._self._c || o;
  return e("div", { ref: "seeksRelationGraph", staticStyle: { "box-sizing": "border-box" }, style: { width: "100%", height: "100%" } }, [t.relationGraph && t.relationGraph.options ? [t.relationGraph.options.showDebugPanel ? e("GraphDebugPanel", { attrs: { "relation-graph": t.relationGraph } }) : t._e(), t.relationGraph.options.allowShowMiniToolBar === !0 ? t._t("miniToolBar", function() {
    return [e("GraphMiniToolBar", { attrs: { "relation-graph": t.relationGraph } })];
  }, { relationGraph: t.relationGraph }) : t._e(), t.relationGraph.options.allowShowMiniView === !0 ? t._t("miniViewPanel", function() {
    return [e("GraphMiniView", { attrs: { "relation-graph": t.relationGraph } })];
  }, { relationGraph: t.relationGraph }) : t._e(), t._t("graph-plug", null, { relationGraph: t.relationGraph }), e("RGCanvas", { attrs: { "relation-graph": t.relationGraph }, scopedSlots: t._u([{ key: "node", fn: function(n) {
    var i = n.node;
    return [t._t("node", null, { node: i, relationGraph: t.relationGraph })];
  } }, { key: "line", fn: function(n) {
    var i = n.line, s = n.link;
    return [t._t("line", null, { line: i, link: s, relationGraph: t.relationGraph })];
  } }], null, !0) }, [e("template", { slot: "canvas-plug" }, [t._t("canvas-plug", null, { relationGraph: t.relationGraph })], 2)], 2)] : t._e()], 2);
}, Ye = [];
const Xe = {
  name: "SeeksRelationGraph",
  components: { GraphMiniToolBar: Ne, GraphMiniView: ke, RGCanvas: fe, GraphDebugPanel: xe },
  props: {
    options: {
      mustUseProp: !1,
      default: () => ({}),
      type: Object
    },
    relationGraphCore: {
      mustUseProp: !1,
      default: null,
      type: Function
    },
    onNodeClick: {
      mustUseProp: !1,
      default: () => () => {
      },
      type: Function
    },
    onNodeExpand: {
      mustUseProp: !1,
      default: () => () => {
      },
      type: Function
    },
    onNodeCollapse: {
      mustUseProp: !1,
      default: () => () => {
      },
      type: Function
    },
    onLineClick: {
      mustUseProp: !1,
      default: () => () => {
      },
      type: Function
    },
    onDownloadExcel: {
      mustUseProp: !1,
      default: null,
      type: Function
    },
    onImageDownload: {
      mustUseProp: !1,
      default: null,
      type: Function
    }
  },
  data() {
    return {
      relationGraph: null,
      graphSetting: null
    };
  },
  created() {
    window && (window.relationGraphDebug = this.options.debug), f("---------------------------graph created---------------------------", this), console.log(
      `%c relation-graph %c Version v${ft} %c More info: https://github.com/seeksdream/relation-graph %c`,
      "background:#35495e ; padding: 1px; border-radius: 3px 0 0 3px;  color: #fff",
      "background:#41b883 ; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff",
      "background:#fff ; padding: 1px; border-radius: 0 3px 3px 0;  color: #41b883",
      "background:transparent"
    );
    let t = !1;
    if (!B || !B.version || B.version.startsWith("3")) {
      console.error("\u5982\u679C\u60A8\u4F7F\u7528\u7684\u662Fvue3\u6216react\uFF0C\u4F60\u9700\u8981\u6CE8\u610Fimport\u65F6\u4F7F\u7528\u7684\u540D\u79F0\uFF1A"), console.error("vue2:import RelationGraph from 'relation-graph'"), console.error("vue3:import RelationGraph from 'relation-graph/vue3'"), console.error("react:import RelationGraph from 'relation-graph/react'");
      return;
    }
    B.version.substring(0, 4) === "2.5." && (t = !0), B.version.substring(0, 4) === "2.6." && parseInt(B.version.split(".")[2]) <= 12 && (t = !0), t && console.error("\u60A8\u7684Vue\u7248\u672C\uFF1A" + B.version + "\u6CE8\u610F\uFF1A\u5F53\u4F60\u4F7F\u7528\u7684vue\u7248\u672C\u7B49\u4E8E\u4F4E\u4E8E2.6.12\u65F6\uFF0C\u56FE\u8C31\u4F1A\u663E\u793A\u4E0D\u6B63\u5E38\uFF0C\u53C2\u8003\u8FD9\u4E2A\u8FDE\u63A5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF1Ahttps://github.com/seeksdream/relation-graph/issues/113"), T || console.error("[relation-graph]Please introduce component screenfull, for example:https://cdnjs.cloudflare.com/ajax/libs/screenfull.js/5.1.0/screenfull.min.js"), dt || console.error("[relation-graph]Please introduce component html2canvas, for example:https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js");
  },
  mounted() {
    f("---------------------------graph mounted---------------------------");
    const t = {
      onNodeClick: this.onNodeClick,
      onNodeExpand: this.onNodeExpand,
      onNodeCollapse: this.onNodeCollapse,
      onLineClick: this.onLineClick,
      onDownloadExcel: this.onDownloadExcel,
      onImageDownload: this.onImageDownload
    }, o = this.relationGraphCore || new vt(this.options, t);
    o.setDom(this.$refs.seeksRelationGraph), o.ready(), this.relationGraph = o, this.graphSetting = this.relationGraph.options, T.on("change", this.onFullscreen);
  },
  beforeDestroy() {
    f("---------------------------graph beforeDestroy---------------------------"), T.off("change", this.onFullscreen), this.$refs.seeksRelationGraph.remove();
  },
  updated() {
    f("---------------------------graph updated---------------------------");
  },
  methods: {
    onFullscreen() {
      this.relationGraph.fullscreen(T.isFullscreen);
    },
    getInstance(t, o) {
      return this.relationGraph;
    },
    setOptions(t, o) {
      this.relationGraph.setOptions(t, o);
    },
    setJsonData(t, o) {
      this.relationGraph.setJsonData(t, (e) => {
        this.$nextTick(() => {
          this.relationGraph.playShowEffect(() => {
            o && o(e);
          });
        });
      });
    },
    appendJsonData(t, o, e) {
      this.relationGraph.appendJsonData(t, o, e);
    },
    setLayouter(t) {
      this.relationGraph.setLayouter(t);
    },
    onGraphResize(t, o) {
      this.relationGraph.refreshNVAnalysisInfo();
    },
    refresh() {
      this.relationGraph.refresh();
    },
    focusRootNode() {
      this.relationGraph.focusRootNode();
    },
    focusNodeById(t) {
      return this.relationGraph.focusNodeById(t);
    },
    getNodeById(t) {
      return this.relationGraph.getNodeById(t);
    },
    removeNodeById(t) {
      return this.relationGraph.removeNodeById(t);
    },
    getNodes() {
      return this.relationGraph.getNodes();
    },
    getLinks() {
      return this.relationGraph.getLinks();
    },
    getGraphJsonData() {
      return this.relationGraph.getGraphJsonData();
    },
    getGraphJsonOptions() {
      return this.relationGraph.getGraphJsonOptions();
    }
  }
}, ht = {};
var qe = /* @__PURE__ */ E(
  Xe,
  Ue,
  Ye,
  !1,
  Ke,
  "341a6d1f",
  null,
  null
);
function Ke(t) {
  for (let o in ht)
    this[o] = ht[o];
}
const Z = /* @__PURE__ */ function() {
  return qe.exports;
}(), Qe = vt, to = {
  BidirectionalTreeLayouter: ut,
  CenterLayouter: pt,
  CircleLayouter: _t,
  FixedLayouter: mt,
  ForceLayouter: J
}, eo = He, oo = Be, no = We, wt = (t, o) => {
  t.component("RelationGraph", Z), t.component("SeeksRelationGraph", Z);
};
typeof window < "u" && window.Vue && wt(window.Vue);
const ro = {
  ...Z,
  RelationGraphCore: Qe,
  Layout: to,
  RGOptions: eo,
  RGLink: oo,
  RGNode: no,
  version: ft,
  install: wt
};
export {
  to as Layout,
  oo as RGLink,
  no as RGNode,
  eo as RGOptions,
  Qe as RelationGraphCore,
  ro as default
};
